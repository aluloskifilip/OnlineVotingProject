{"version":3,"sources":["Navbar.js","ControlledCarousel.js","Chart.js","Comments.js","ListPolls.js","App.js","Login.js","Register.js","index.js"],"names":["NavBar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","signOut","sessionStorage","removeItem","setState","loggedIn","notificationDOMRef","current","addNotification","title","message","type","insert","container","animationIn","animationOut","dismiss","duration","dismissable","click","history","push","state","user","React","createRef","_this2","token","getItem","fetch","method","headers","Headers","Authorization","Content-Type","then","res","status","json","data","signed","_this3","react_default","a","createElement","Nav_default","Link","onClick","className","NavDropdown_default","name","id","Item","href","Divider","Navbar_default","bg","expand","variant","react_notifications_component_default","ref","Brand","Toggle","aria-controls","Collapse","Component","withRouter","ControlledCarousel","context","handleSelect","bind","assertThisInitialized","index","direction","selectedIndex","e","_this$state","Carousel_default","activeIndex","onSelect","src","alt","height","width","Caption","ChartBar","options","chart","xaxis","categories","series","nextProps","change","votingOptions","map","option","votingValues","votes","react_apexcharts_min_default","TextArea","Input","CommentList","_ref","comments","list","dataSource","header","concat","length","itemLayout","renderItem","es_comment","Editor","_ref2","onChange","onSubmit","submitting","value","es_form","rows","es_button","htmlType","loading","Comments","handleSubmit","body","JSON","stringify","pollId","authorId","_id","authorName","author","avatar","content","datetime","createdAt","toConsumableArray","handleChange","target","comment","Comments_CommentList","Comments_Editor","Countdown","Statistic","Panel","IconText","text","display","icon","style","marginRight","poll","key","expireDate","image","url","description","likes","updatedAt","__v","ListPolls","getPolls","polls","selectedPoll","populateData","showNotification","listData","forEach","item","imageUrl","handlePollClick","getPollById","expDate","Date","valueOf","now","notificationDOMREF","visible","handleOk","handleCancel","filter","radioValue","handleClose","show","openSecondModal","handleOkVote","vote","voteId","userId","alteredSelectedPoll","localeCompare","voteToAdd","alteredUser","setTimeout","console","log","checkForRadioAvailability","numExpDate","isLoggedIn","checkIfChecked","optionId","addLike","deletePoll","success","error","checkIfSameAuthor","someProps","hasChanged","skeleton","active","size","pagination","page","pageSize","footer","actions","ListPolls_IconText","collapse","accordion","bordered","expandIcon","Comments_Comments","extra","Meta","toLocaleString","timeZone","Modal_default","onHide","Header","closeButton","Title","Body","Footer","Button_default","aria-labelledby","format","Image_default","fluid","divider","orientation","es_radio","Group","disabled","checked","defaultChecked","Chart_ChartBar","App","openModal","lgShow","addOptions","hasSame","i","textInput","deleteItem","filteredItems","onRegister","pollDescription","pollTitle","notificationDOM","endDate","toUpload","FormData","append","selectedFile","axios","post","changeOccurred","date","handleFileChange","event","files","ControlledCarousel_ControlledCarousel","Form_default","controlId","Label","Control","placeholder","input","InputGroup_default","FormControl_default","aria-label","aria-describedby","Append","react_flip_move_es","easing","t","Row_default","Col_default","es","inline","selected","showTimeSelect","timeFormat","timeIntervals","dateFormat","timeCaption","md","action","multiple","as","spin","spinning","ListPolls_ListPolls","Login","preventDefault","loginData","email","password","checkValidEmail","checkEmpty","setItem","document","location","handleEmailChange","handlePasswordChange","test","String","toLowerCase","Register","componentDidMount","onSumbit","registerData","validEmail","checkEmail","emptyFields","repeatPassword","handleNameChange","handleRepeatPasswordChange","repeatPass","Index","react_router_dom","Fragment","src_Navbar","react_router","exact","path","component","ReactDOM","render","src_Index","getElementById"],"mappings":"+UASMA,qBAEF,SAAAA,EAAYC,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACdE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAoCVQ,QAAU,WACNC,eAAeC,WAAW,YAC1BT,EAAKU,SACD,CACIC,UAAS,IAGjBX,EAAKY,mBAAmBC,QAAQC,gBAAgB,CAC5CC,MAAO,WACPC,QAAS,2BACTC,KAAM,UACNC,OAAQ,MACRC,UAAW,aACXC,YAAa,CAAC,WAAY,UAC1BC,aAAc,CAAC,WAAY,WAC3BC,QAAS,CAAEC,SAAU,KACrBC,YAAa,CAAEC,OAAO,KAE1BzB,EAAKD,MAAM2B,QAAQC,KAAK,MArDxB3B,EAAK4B,MAAQ,CACTjB,UAAS,EACTkB,KAAM,IAEV7B,EAAKY,mBAAqBkB,IAAMC,YANlB/B,oFASE,IAAAgC,EAAA7B,KACV8B,EAAQzB,eAAe0B,QAAQ,YAClCD,GACCE,MAAM,mCAAoC,CACtCC,OAAQ,MACRC,QAAS,IAAIC,QAAQ,CACjBC,cAAiBN,EACjBO,eAAgB,wCAErBC,KAAK,SAAAC,GACc,MAAfA,EAAIC,OACHD,EAAIE,OAAOH,KAAK,SAAAI,GACZb,EAAKtB,SAAS,CACVC,UAAU,EACVkB,KAAMgB,MAMdb,EAAKtB,SAAS,CACVC,UAAU,uCA4BtB,IAEAmC,EAFAC,EAAA5C,KAuBJ,OAnBI2C,GADuB,IAAxB3C,KAAKyB,MAAMjB,SAENqC,EAAAC,EAAAC,cAACC,EAAAF,EAAD,KACID,EAAAC,EAAAC,cAACC,EAAAF,EAAIG,KAAL,CAAUC,QAAS,kBAAMN,EAAKhD,MAAM2B,QAAQC,KAAK,YAAjD,WACAqB,EAAAC,EAAAC,cAACC,EAAAF,EAAIG,KAAL,CAAUC,QAAS,kBAAMN,EAAKhD,MAAM2B,QAAQC,KAAK,eAAjD,aAKJqB,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CAAKK,UAAU,kBACXN,EAAAC,EAAAC,cAACK,EAAAN,EAAD,CAAalC,MAAOZ,KAAKyB,MAAMC,KAAK2B,KAAMC,GAAG,sBACzCT,EAAAC,EAAAC,cAACK,EAAAN,EAAYS,KAAb,CAAmBC,KAAK,eAAxB,UACAX,EAAAC,EAAAC,cAACK,EAAAN,EAAYS,KAAb,CAAkBC,KAAK,eAAvB,kBACAX,EAAAC,EAAAC,cAACK,EAAAN,EAAYS,KAAb,CAAkBC,KAAK,eAAvB,aACAX,EAAAC,EAAAC,cAACK,EAAAN,EAAYW,QAAb,MACAZ,EAAAC,EAAAC,cAACK,EAAAN,EAAYS,KAAb,CAAkBL,QAASlD,KAAKI,SAAhC,cAMZyC,EAAAC,EAAAC,cAACW,EAAAZ,EAAD,CAAQa,GAAG,YAAYC,OAAO,KAAKC,QAAQ,QACvChB,EAAAC,EAAAC,cAACe,EAAAhB,EAAD,CAAmBiB,IAAK/D,KAAKS,qBAC7BoC,EAAAC,EAAAC,cAACW,EAAAZ,EAAOkB,MAAR,CAAcR,KAAK,KAAnB,UACAX,EAAAC,EAAAC,cAACW,EAAAZ,EAAOmB,OAAR,CAAeC,gBAAc,qBAC7BrB,EAAAC,EAAAC,cAACW,EAAAZ,EAAOqB,SAAR,CAAiBb,GAAG,oBACpBT,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CAAKK,UAAU,WACXN,EAAAC,EAAAC,cAACC,EAAAF,EAAIG,KAAL,CAAUC,QAAS,kBAAMN,EAAKhD,MAAM2B,QAAQC,KAAK,OAAjD,SAEHmB,WA5FIhB,IAAMyC,YAmGZC,cAAW1E,6BCzGL2E,cACjB,SAAAA,EAAY1E,EAAO2E,GAAS,IAAA1E,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAsE,IACxBzE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAwE,GAAAnE,KAAAH,KAAMJ,EAAO2E,KAERC,aAAe3E,EAAK2E,aAAaC,KAAlB3E,OAAA4E,EAAA,EAAA5E,CAAAD,IAEpBA,EAAK4B,MAAQ,CACTkD,MAAO,EACPC,UAAW,MAPS/E,4EAWfgF,EAAeC,GACxB9E,KAAKO,SAAS,CACVoE,MAAOE,EACPD,UAAWE,EAAEF,6CAIZ,IAAAG,EACwB/E,KAAKyB,MAA1BkD,EADHI,EACGJ,MAAOC,EADVG,EACUH,UAEf,OACI/B,EAAAC,EAAAC,cAACiC,EAAAlC,EAAD,CACImC,YAAaN,EACbC,UAAWA,EACXM,SAAUlF,KAAKwE,cAEf3B,EAAAC,EAAAC,cAACiC,EAAAlC,EAASS,KAAV,KACIV,EAAAC,EAAAC,cAAA,OACII,UAAU,gBACVgC,IAAI,qEACJC,IAAI,cACJC,OAAO,MACPC,MAAM,QAEVzC,EAAAC,EAAAC,cAACiC,EAAAlC,EAASyC,QAAV,KACI1C,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,yEAGRF,EAAAC,EAAAC,cAACiC,EAAAlC,EAASS,KAAV,KACIV,EAAAC,EAAAC,cAAA,OACII,UAAU,gBACVgC,IAAI,2GACJC,IAAI,cACJC,OAAO,MACPC,MAAM,QAGVzC,EAAAC,EAAAC,cAACiC,EAAAlC,EAASyC,QAAV,KACI1C,EAAAC,EAAAC,cAAA,gCACAF,EAAAC,EAAAC,cAAA,uEAGRF,EAAAC,EAAAC,cAACiC,EAAAlC,EAASS,KAAV,KACIV,EAAAC,EAAAC,cAAA,OACII,UAAU,gBACVgC,IAAI,kIACJC,IAAI,cACJC,OAAO,MACPC,MAAM,QAGVzC,EAAAC,EAAAC,cAACiC,EAAAlC,EAASyC,QAAV,KACI1C,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,uFAlEwBpB,IAAMyC,iUCEjCoB,eAEjB,SAAAA,EAAY5F,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAwF,IACd3F,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA0F,GAAArF,KAAAH,KAAMJ,KACD6B,MAAM,CACPiB,KAAM,KACN+C,QAAS,CACLC,MAAO,CACHpC,GAAI,cAERqC,MAAO,CACHC,WAAY,KAGpBC,OAAQ,CAAC,CACLxC,KAAM,iBACNX,KAAM,MAdA7C,yFAoBQiG,GACtB,IAAyB,IAAtB9F,KAAKJ,MAAMmG,OAAgB,CAC1B,IAAIC,EAAgBF,EAAUpD,KAAK+C,QAAQQ,IAAI,SAAAC,GAAW,OAAOA,EAAO7C,OACpE8C,EAAeL,EAAUpD,KAAK+C,QAAQQ,IAAI,SAAAC,GAAW,OAAOA,EAAOE,QAE3EpG,KAAKO,SAAS,CACVmC,KAAMoD,EAAUpD,KAChB+C,QAAS,CACLE,MAAM,CACFC,WAAYI,IAGpBH,OAAQ,CAAC,CACLnD,KAAMyD,mDASd,IAAIH,EAAgBhG,KAAKJ,MAAM8C,KAAK+C,QAAQQ,IAAI,SAAAC,GAAW,OAAOA,EAAO7C,OACrE8C,EAAenG,KAAKJ,MAAM8C,KAAK+C,QAAQQ,IAAI,SAAAC,GAAW,OAAOA,EAAOE,QACxEpG,KAAKO,SAAS,CACVmC,KAAM1C,KAAKJ,MAAM8C,KACjB+C,QAAS,CACLE,MAAM,CACFC,WAAYI,IAGpBH,OAAQ,CAAC,CACLnD,KAAMyD,uCAOd,OAAOtD,EAAAC,EAAAC,cAAA,WACHF,EAAAC,EAAAC,cAACsD,GAAAvD,EAAD,CAAO2C,QAASzF,KAAKyB,MAAMgE,QAASI,OAAQ7F,KAAKyB,MAAMoE,OAAQ/E,KAAK,MAAMwE,MAAO,IAAKD,OAAQ,cA9DpE1D,IAAMyC,6DCFpCkC,GAAaC,KAAbD,SAGFE,GAAc,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,SAAH,OAChB7D,EAAAC,EAAAC,cAAC4D,EAAA,EAAD,CACIC,WAAYF,EACZG,OAAM,GAAAC,OAAKJ,EAASK,OAAd,aACNC,WAAW,aACXC,WAAY,SAAArH,GAAK,OAAIiD,EAAAC,EAAAC,cAACmE,GAAA,EAAYtH,OAIpCuH,GAAS,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,SAAUC,EAAbF,EAAaE,SAAUC,EAAvBH,EAAuBG,WAAYC,EAAnCJ,EAAmCI,MAAnC,OACX3E,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC0E,GAAA,EAAKlE,KAAN,KACIV,EAAAC,EAAAC,cAACuD,GAAD,CAAUoB,KAAM,EAAIL,SAAUA,EAAUG,MAAOA,KAEnD3E,EAAAC,EAAAC,cAAC0E,GAAA,EAAKlE,KAAN,KACIV,EAAAC,EAAAC,cAAC4E,GAAA,EAAD,CAAQC,SAAS,SAASC,QAASN,EAAYrE,QAASoE,EAAUxG,KAAK,WAAvE,kBAOSgH,eAEjB,SAAAA,EAAYlI,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA8H,IACdjI,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAgI,GAAA3H,KAAAH,KAAMJ,KA0BVmI,aAAe,WACPlI,EAAK4B,MAAM+F,OAAU3H,EAAKD,MAAM8B,OAIpC7B,EAAKU,SAAS,CACVgH,YAAY,IAGhBvF,MAAM,oCAAqC,CACvCC,OAAQ,OACR+F,KAAMC,KAAKC,UAAU,CAACC,OAAQtI,EAAKD,MAAM8C,KAAKY,GAAI8E,SAAUvI,EAAKD,MAAM8B,KAAK2G,IAAKC,WAAYzI,EAAKD,MAAM8B,KAAK2B,KAAMmE,MAAO3H,EAAK4B,MAAM+F,QACrItF,QAAS,CACLG,eAAiB,sBAGpBC,KAAK,SAAAC,GACgB,MAAfA,EAAIC,QACHD,EAAIE,OAAOH,KAAK,SAAAI,GACZ7C,EAAKU,SAAS,CACVgH,YAAY,EACZC,MAAO,GACPd,SAAQ,CAAG,CACP6B,OAAQ7F,EAAK4F,WACbE,OAAQ,mEACRC,QAAS5F,EAAAC,EAAAC,cAAA,SAAIL,EAAK+F,SAClBC,SAAUhG,EAAKiG,YAJX7B,OAAAhH,OAAA8I,GAAA,EAAA9I,CAMAD,EAAK4B,MAAMiF,mBAvDzB7G,EAgElBgJ,aAAe,SAAC/D,GACZjF,EAAKU,SAAS,CACViH,MAAO1C,EAAEgE,OAAOtB,SAhEpB3H,EAAK4B,MAAQ,CACT8F,YAAY,EACZC,MAAO,GACPd,SAAU,IALA7G,oFAUd,GAAuC,IAApCG,KAAKJ,MAAM8C,KAAKgE,SAASK,OAA5B,CAGA,IAAML,EAAW1G,KAAKJ,MAAM8C,KAAKgE,SAAST,IAAI,SAAA8C,GAC1C,MAAO,CACHR,OAAQQ,EAAQT,WAChBE,OAAQ,mEACRC,QAAS5F,EAAAC,EAAAC,cAAA,SAAIgG,EAAQN,SACrBC,SAAUK,EAAQJ,aAG1B3I,KAAKO,SAAS,CACVmG,SAAUA,sCAoDV,IAAA3B,EACoC/E,KAAKyB,MAArCiF,EADJ3B,EACI2B,SAAUa,EADdxC,EACcwC,WAAYC,EAD1BzC,EAC0ByC,MAC9B,OACI3E,EAAAC,EAAAC,cAAA,OAAKI,UAAU,mBACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aAClBuD,EAASK,OAAS,GAAKlE,EAAAC,EAAAC,cAACiG,GAAD,CAAatC,SAAUA,IAC/C7D,EAAAC,EAAAC,cAACmE,GAAA,EAAD,CACIsB,OACI3F,EAAAC,EAAAC,cAACyF,GAAA,EAAD,CACIrD,IAAI,mEACJC,IAAI,aAGZqD,QACI5F,EAAAC,EAAAC,cAACkG,GAAD,CACI5B,SAAUrH,KAAK6I,aACfvB,SAAUtH,KAAK+H,aACfR,WAAYA,EACZC,MAAOA,gBA/FG7F,IAAMyC,WCZpC8E,GAAcC,IAAdD,UACAE,GAAUjF,IAAViF,MAEFC,GAAW,SAAA5C,GAAA,IAAG3F,EAAH2F,EAAG3F,KAAMwI,EAAT7C,EAAS6C,KAAMpG,EAAfuD,EAAevD,QAASqG,EAAxB9C,EAAwB8C,QAAxB,OACb1G,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAACyG,EAAA,EAAD,CAAM1I,KAAMA,EAAM2I,MAAO,CAAEC,YAAa,EAAGH,QAASA,GAAUrG,QAASA,IAClEoG,IAKHK,GACF,CACItB,IAAO,GACPE,OAAU,GACVH,SAAY,GACZxH,MAAS,GACT6E,QAAW,CACP,CACI4C,IAAO,GACPhF,KAAQ,GACRuG,IAAO,GACPxD,MAAS,GAEb,CACIiC,IAAO,GACPhF,KAAQ,GACRuG,IAAO,GACPxD,MAAS,IAGjByD,WAAc,GACdC,MAAS,CACLzB,IAAO,GACP0B,IAAO,GACPjJ,KAAQ,IAEZkJ,YAAe,GACfC,MAAS,EACTvD,SAAY,GACZiC,UAAa,GACbuB,UAAa,GACbC,IAAO,GAGMC,eAEjB,SAAAA,EAAYxK,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAoK,IACdvK,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAsK,GAAAjK,KAAAH,KAAMJ,KAkCVyK,SAAW,WACPxK,EAAKU,SAAS,CACVsH,SAAS,GACV,WACC7F,MAAM,mCACDM,KAAK,SAAAC,GACiB,MAAfA,EAAIC,QACJD,EAAIE,OAAOH,KAAK,SAAAI,GACO,IAAhBA,EAAKqE,QACRlH,EAAKU,SAAS,CACVsH,SAAS,EACTyC,MAAO5H,EACP6H,aAAc7H,EAAK,IACpB,WAAO7C,EAAK2K,wBAhDrB3K,EA2DlB4K,iBAAmB,SAAC1G,EAAIlD,EAASD,EAAOE,EAAMM,GAE1C2C,EAAIrD,QAAQC,gBAAgB,CACxBC,MAAOA,EACPC,QAASA,EACTC,KAAMA,EACNC,OAAQ,MACRC,UAAW,aACXC,YAAa,CAAC,WAAY,UAC1BC,aAAc,CAAC,WAAY,WAC3BC,QAAS,CAAEC,SAAUA,GACrBC,YAAa,CAAEC,OAAO,MAtEZzB,EA4ElB2K,aAAe,WACT,IAAIE,EAAW,GACf7K,EAAK4B,MAAM6I,MAAMK,QAAQ,SAAAC,GACrBF,EAASlJ,KAAK,CACVZ,MAAOgK,EAAKhK,MACZ4H,OAAQ,mEACRC,QAASmC,EAAKZ,YACda,SAAUD,EAAKd,MAAMC,IACrBpB,UAAWiC,EAAKjC,UAChBsB,MAAOW,EAAKX,MACZvD,SAAUkE,EAAKlE,SACfpD,GAAIsH,EAAKvC,IACTD,SAAUwC,EAAKxC,aAGvBvI,EAAKU,SAAS,CACVmK,SAAUA,EACVhJ,KAAM7B,EAAKD,MAAM8B,QA7FT7B,EAkGlBiL,gBAAkB,SAACxH,GACf,IAAIqG,EAAO9J,EAAKkL,YAAYzH,GACtB0H,EAAU,IAAIC,KAAKtB,EAAKE,YAAYqB,UAC1BD,KAAKE,OAETH,GACRnL,EAAK4K,iBAAiB5K,EAAKuL,mBAAmB,sDAAsD,OAAO,UAAU,KAG3HvL,EAAKU,SAAS,CACV8K,SAAS,EACTd,aAAcZ,KA7GF9J,EAiHlByL,SAAW,WACTzL,EAAKU,SAAS,CACV8K,SAAS,KAnHGxL,EAwHlB0L,aAAe,WACb1L,EAAKU,SAAS,CACV8K,SAAS,KA1HGxL,EA8HlBkL,YAAc,SAACzH,GAIb,OAHWzD,EAAK4B,MAAM6I,MAAMkB,OAAO,SAAA7B,GAC/B,OAAOA,EAAKtB,MAAQ/E,IAEZ,IAlIIzD,EAqIlBwH,SAAW,SAACvC,GACRjF,EAAKU,SAAS,CACVkL,WAAY3G,EAAEgE,OAAOtB,SAvIX3H,EA2IlB6L,YAAc,WACZ7L,EAAKU,SAAS,CACVoL,MAAM,KA7IM9L,EAiJlB+L,gBAAkB,WAChB/L,EAAKU,SAAS,CACVoL,MAAM,KAnJM9L,EAuJlBgM,aAAe,WACX,IACMC,EAAO,CACX3D,OAFkBtI,EAAK4B,MAAM8I,aAAalC,IAG1C0D,OAAQlM,EAAK4B,MAAMgK,WACnBO,OAAQnM,EAAK4B,MAAMC,KAAK2G,KAG1BrG,MAAM,iCAAiC,CACnCC,OAAQ,OACR+F,KAAMC,KAAKC,UAAU4D,GACrB5J,QAAS,CACLG,eAAgB,sBAGnBC,KAAK,SAAAC,GACF,GAAkB,MAAfA,EAAIC,OAAgB,CACnB,IAAIyJ,EAAsBpM,EAAK4B,MAAM8I,aACrC0B,EAAoBxG,QAAU5F,EAAK4B,MAAM8I,aAAa9E,QAAQQ,IAAI,SAAAC,GAI9D,OAH6C,IAA1CA,EAAOmC,IAAI6D,cAAcJ,EAAKC,SAC7B7F,EAAOE,QAEJF,IAGX,IAAIiG,EAAY,CACZhE,OAAQ2D,EAAK3D,OACb4D,OAAQD,EAAKC,QAEbK,EAAcvM,EAAK4B,MAAMC,KAC7B0K,EAAYhG,MAAM5E,KAAK2K,GACvBtM,EAAKU,SAAS,CACVgK,aAAc0B,EACdvK,KAAM0K,EACNT,MAAM,EACN5F,QAAQ,GACT,WAAQsG,WAAW,WAAMxM,EAAKU,SAAS,CAACwF,QAAQ,KAAS,YAG5DxD,EAAIE,OAAOH,KAAK,SAAAI,GAAS4J,QAAQC,IAAI7J,QA9LnC7C,EAmMlB2M,0BAA4B,SAACrE,EAAQ0B,GACjC,IAAM4C,EAAa,IAAIxB,KAAKpB,GAAYqB,UAGxC,GAFmBD,KAAKE,OAEPsB,EACb,OAAO,EAGX,GAAG5M,EAAKD,MAAM8M,WAAY,CACtB,IAAItG,EAAQvG,EAAK4B,MAAMC,KAAK0E,MAC5B,OAAoB,IAAjBA,EAAMW,QAMe,IAHZX,EAAMoF,OAAO,SAAAM,GACrB,OAA6C,IAAtCA,EAAK3D,OAAO+D,cAAc/D,KAExBpB,OAGb,OAAO,GAtNGlH,EA2NlB8M,eAAiB,SAACxE,EAAQyE,GACxB,GAAG/M,EAAKD,MAAM8M,WAAY,CAEtB,IAAItG,EAAQvG,EAAK4B,MAAMC,KAAK0E,MAC5B,OAAoB,IAAjBA,EAAMW,QAMa,IAHVX,EAAMoF,OAAO,SAAAM,GACrB,OAA+C,IAAxCA,EAAKC,OAAOG,cAAcU,KAExB7F,OAGb,OAAO,GAxOKlH,EA8OlBgN,QAAU,SAAC1E,GACJtI,EAAKD,MAAM8M,YAEV1K,MAAM,iCAAkC,CACpCC,OAAQ,OACR+F,KAAMC,KAAKC,UAAU,CAACC,OAAQA,IAC9BjG,QAAS,CACLG,eAAgB,sBAGnBC,KAAK,SAAAC,GACF,GAAmB,MAAfA,EAAIC,OAAgB,CACpB,IAAIkI,EAAW7K,EAAK4B,MAAMiJ,SAASzE,IAAI,SAAA2E,GAInC,OAHsC,IAAlCA,EAAKtH,GAAG4I,cAAc/D,IACtByC,EAAKX,QAEFW,IAGX/K,EAAKU,SAAS,CACVmK,SAAUA,QAlQhB7K,EA0QlBiN,WAAa,SAAC3E,GACVnG,MAAM,mCAAoC,CACtCC,OAAQ,OACR+F,KAAMC,KAAKC,UAAU,CAACC,OAAQA,IAC9BjG,QAAS,CACLG,eAAiB,sBAGpBC,KAAK,SAAAC,GACgB,MAAfA,EAAIC,QACH3B,IAAQkM,QAAQ,sCAChBlN,EAAKwK,YAEc,MAAf9H,EAAIC,QACR3B,IAAQmM,MAAM,6DAxRZnN,EA6RlBoN,kBAAoB,SAAC7E,EAAU1G,GAC3B,OAAG7B,EAAKD,MAAM8M,YACkC,IAArCtE,EAAS8D,cAAcxK,EAAK2G,KAAa,SAGzC,QA/RXxI,EAAK4B,MAAM,CACPoG,SAAS,EACTyC,MAAO,GACPI,SAAU,GACVW,SAAS,EACTd,aAAcZ,GACd8B,WAAY,KACZE,MAAM,EACNjK,KAAM,KACNqE,QAAQ,GAGZlG,EAAKuL,mBAAqBzJ,IAAMC,YAflB/B,mFAoBdG,KAAKqK,6DAGgBvE,GAAU,IAAAjE,EAAA7B,KAC3BkN,EAAyB,OAAbpH,EAAoBA,EAAY9F,KAAKJ,MACtDI,KAAKO,SAAS,CACVmB,KAAMwL,EAAUxL,MACjB,YACoC,IAAzBoE,EAAUqH,YACZtL,EAAKwI,8CA0QX,IAAAzH,EAAA5C,KACL,OACI6C,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACXN,EAAAC,EAAAC,cAACqK,EAAA,EAAD,CAAUvF,QAAS7H,KAAKyB,MAAMoG,QAASwF,QAAM,GAC7CxK,EAAAC,EAAAC,cAAC4D,EAAA,EAAD,CACIK,WAAW,WACXsG,KAAK,QACLC,WAAY,CACRlG,SAAU,SAAAmG,GACNlB,QAAQC,IAAIiB,IAEhBC,SAAU,GAEd7G,WAAY5G,KAAKyB,MAAMiJ,SACvBgD,OACI7K,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,uBADJ,gBAIJkE,WAAY,SAAA2D,GAAI,OACZ/H,EAAAC,EAAAC,cAAC4D,EAAA,EAAKpD,KAAN,CACIqG,IAAKgB,EAAKhK,MACV+M,QAAS,CACL9K,EAAAC,EAAAC,cAAC6K,GAAD,CAAU9M,KAAK,SAASwI,KAAMsB,EAAKX,MAAO/G,QAAS,WAAON,EAAKiK,QAAQjC,EAAKtH,KAAMiG,QAAQ,WAC1F1G,EAAAC,EAAAC,cAAC8K,EAAA,EAAD,CAAUC,WAAS,EAACC,UAAU,EAAOC,WAAY,kBAAMnL,EAAAC,EAAAC,cAAC6K,GAAD,CAAU9M,KAAK,UAAUwI,KAAMsB,EAAKlE,SAASK,OAAQwC,QAAQ,aAChH1G,EAAAC,EAAAC,cAACqG,GAAD,CAAOQ,IAAI,IAAI/C,OAAO,IAClBhE,EAAAC,EAAAC,cAACkL,GAAD,CAAUvL,KAAMkI,EAAMlJ,KAAMkB,EAAKnB,MAAMC,SAG/CmB,EAAAC,EAAAC,cAAC6K,GAAD,CAAU9M,KAAK,SAASoC,QAAS,WAAON,EAAKkK,WAAWlC,EAAKtH,KAAMiG,QAAS3G,EAAKqK,kBAAkBrC,EAAKxC,SAAUxF,EAAKhD,MAAM8B,SAEjIwM,MACIrL,EAAAC,EAAAC,cAAA,UAAQI,UAAU,mBAAmBD,QAAS,kBAAMN,EAAKkI,gBAAgBF,EAAKtH,MAC9ET,EAAAC,EAAAC,cAAA,OACIuC,MAAO,IACPF,IAAI,OACJD,IAAK,mCAAqCyF,EAAKC,aAKvDhI,EAAAC,EAAAC,cAAC4D,EAAA,EAAKpD,KAAK4K,KAAX,CACI3F,OAAQ3F,EAAAC,EAAAC,cAACyF,GAAA,EAAD,CAAQrD,IAAKyF,EAAKpC,SAC1B5H,MAAOiC,EAAAC,EAAAC,cAAA,UAAQI,UAAU,mBAAmBD,QAAS,kBAAMN,EAAKkI,gBAAgBF,EAAKtH,MAAMsH,EAAKhK,OAChGoJ,YAAW,eAAAlD,OAAiB,IAAImE,KAAKrI,EAAKnB,MAAM8I,aAAa5B,WAAWyF,eAAe,QAAS,CAACC,SAAU,WAE9GzD,EAAKnC,eAO1B5F,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACXN,EAAAC,EAAAC,cAACuL,EAAAxL,EAAD,CAAO6I,KAAM3L,KAAKyB,MAAMkK,KAAM4C,OAAQvO,KAAK0L,aACvC7I,EAAAC,EAAAC,cAACuL,EAAAxL,EAAM0L,OAAP,CAAcC,aAAW,GACrB5L,EAAAC,EAAAC,cAACuL,EAAAxL,EAAM4L,MAAP,uBAEJ7L,EAAAC,EAAAC,cAACuL,EAAAxL,EAAM6L,KAAP,mEACA9L,EAAAC,EAAAC,cAACuL,EAAAxL,EAAM8L,OAAP,KACI/L,EAAAC,EAAAC,cAAC8L,EAAA/L,EAAD,CAAQe,QAAQ,YAAYX,QAASlD,KAAK0L,aAA1C,SAGA7I,EAAAC,EAAAC,cAAC8L,EAAA/L,EAAD,CAAQe,QAAQ,UAAUX,QAASlD,KAAK6L,cAAxC,SAMZhJ,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACXN,EAAAC,EAAAC,cAACe,EAAAhB,EAAD,CAAmBiB,IAAK/D,KAAKoL,qBAC7BvI,EAAAC,EAAAC,cAACuL,EAAAxL,EAAD,CACAwK,KAAK,KACL3B,KAAM3L,KAAKyB,MAAM4J,QACjBkD,OAAQvO,KAAKuL,aACbuD,kBAAgB,gCAIZjM,EAAAC,EAAAC,cAACuL,EAAAxL,EAAM0L,OAAP,CAAcC,aAAW,GACxB5L,EAAAC,EAAAC,cAACuL,EAAAxL,EAAM4L,MAAP,CAAapL,GAAG,gCACXtD,KAAKyB,MAAM8I,aAAa3J,QAG9BiC,EAAAC,EAAAC,cAACuL,EAAAxL,EAAM6L,KAAP,KACI9L,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YACXN,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,wBAAgB/C,KAAKyB,MAAM8I,aAAahC,UAE/C1F,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YACXN,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,4BAAoB,IAAIkI,KAAKjL,KAAKyB,MAAM8I,aAAa5B,WAAWyF,eAAe,QAAS,CAACC,SAAU,WAE1GxL,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YACXN,EAAAC,EAAAC,cAACmG,GAAD,CAAWtI,MAAM,iBAAiB4G,MAAOxH,KAAKyB,MAAM8I,aAAaV,WAAYkF,OAAO,oBAExFlM,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACXN,EAAAC,EAAAC,cAACiM,GAAAlM,EAAD,CAAOqC,IAAK,mCAAqCnF,KAAKyB,MAAM8I,aAAaT,MAAMC,IAC1E3E,IAAKpF,KAAKyB,MAAM8I,aAAalC,IAC7BhD,OAAQ,IACR4J,OAAK,KAGdpM,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACXN,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,UAAK/C,KAAKyB,MAAM8I,aAAaP,cAEjCnH,EAAAC,EAAAC,cAACmM,EAAA,EAAD,CAASC,YAAY,QAArB,kBACAtM,EAAAC,EAAAC,cAAA,OAAKI,UAAU,oBACXN,EAAAC,EAAAC,cAACqM,GAAA,EAAMC,MAAP,CAAahI,SAAUrH,KAAKqH,SAAUG,MAAOxH,KAAKyB,MAAMgK,YAEhDzL,KAAKyB,MAAM8I,aAAa9E,QAAQQ,IAAI,SAAAC,GAChC,OAAOrD,EAAAC,EAAAC,cAACqM,GAAA,EAAD,CAAOxF,IAAK1D,EAAOmC,IAAKnF,QAASN,EAAKgJ,gBAAkBpE,MAAOtB,EAAOmC,IAAKiH,SAAU1M,EAAK4J,0BAA0B5J,EAAKnB,MAAM8I,aAAalC,IAAKzF,EAAKnB,MAAM8I,aAAaV,YACnK0F,QAAS3M,EAAK+J,eAAe/J,EAAKnB,MAAM8I,aAAalC,IAAKnC,EAAOmC,KAAMmH,eAAgB5M,EAAK+J,eAAe/J,EAAKnB,MAAM8I,aAAalC,IAAKnC,EAAOmC,MAAOnC,EAAO7C,UAK1LR,EAAAC,EAAAC,cAACmM,EAAA,EAAD,CAASC,YAAY,QAArB,gBACAtM,EAAAC,EAAAC,cAAA,OAAKI,UAAU,oBACXN,EAAAC,EAAAC,cAAC0M,GAAD,CAAU/M,KAAM1C,KAAKyB,MAAM8I,aAAcxE,OAAQ/F,KAAKyB,MAAMsE,UAEhElD,EAAAC,EAAAC,cAACmM,EAAA,EAAD,mBAraGvN,IAAMyC,WCzCxBsL,eAEjB,SAAAA,EAAY9P,EAAO2E,GAAS,IAAA1E,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA0P,IACxB7P,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA4P,GAAAvP,KAAAH,KAAMJ,EAAO2E,KA+CjBkG,iBAAmB,SAAC1G,EAAIlD,EAASD,EAAOE,EAAMM,GAE1C2C,EAAIrD,QAAQC,gBAAgB,CACxBC,MAAOA,EACPC,QAASA,EACTC,KAAMA,EACNC,OAAQ,MACRC,UAAW,aACXC,YAAa,CAAC,WAAY,UAC1BC,aAAc,CAAC,WAAY,WAC3BC,QAAS,CAAEC,SAAUA,GACrBC,YAAa,CAAEC,OAAO,MA3DFzB,EAiE5B8P,UAAY,WACR,IAAM7N,EAAQzB,eAAe0B,QAAQ,YAClClC,EAAK4B,MAAMjB,UAAYsB,EACtBjC,EAAKU,SAAS,CACVqP,QAAQ,KAIZ/P,EAAK4K,iBAAiB5K,EAAKY,mBAAmB,iFAAiF,OAAO,UAAU,KAChJ4L,WAAW,kBAAMxM,EAAKD,MAAM2B,QAAQC,KAAK,WAAU,QA1E/B3B,EAgF5BgQ,WAAY,WAEP,IADD,IAAIC,GAAU,EACLC,EAAE,EAAGA,EAAElQ,EAAK4B,MAAMgE,QAAQsB,OAAOgJ,IACrC,GAAGlQ,EAAK4B,MAAMgE,QAAQsK,GAAGnG,MAAQ/J,EAAKmQ,UAAUxI,MAAM,CAClDsI,GAAU,EACV,MAGT,GAA8C,IAA3CjQ,EAAKmQ,UAAUxI,MAAM0E,cAAc,MAAc4D,EAAS,CACzD,IAAIrK,EAAU5F,EAAK4B,MAAMgE,QACzBA,EAAQjE,KACJ,CACI6B,KAAMxD,EAAKmQ,UAAUxI,MACrBoC,IAAK/J,EAAKmQ,UAAUxI,MACpBpB,MAAO,IAGfvG,EAAKU,SAAS,CACVkF,QAASA,GACV,WAAO5F,EAAKmQ,UAAUxI,MAAM,OAnGX3H,EAuG5BoQ,WAAa,SAACrG,GACZ,IAAIsG,EAAiBrQ,EAAK4B,MAAMgE,QAAQ+F,OAAO,SAAAZ,GAC3C,OAAQA,EAAKhB,MAAQA,IAEzB/J,EAAKU,SAAS,CACVkF,QAASyK,KA5GarQ,EAgH5BsQ,WAAa,WACX,GAAyC,IAAtCtQ,EAAKuQ,gBAAgB5I,MAAMT,QAAgD,IAAhClH,EAAKwQ,UAAU7I,MAAMT,QAA6C,IAA7BlH,EAAK4B,MAAMgE,QAAQsB,QAA6C,IAA9BlH,EAAK4B,MAAMgE,QAAQsB,OAEpIlH,EAAK4K,iBAAiB5K,EAAKyQ,gBAAgB,gCAAiC,QAAS,SAAU,SAE/F,CACF,IAAI5N,EAAO,CACP6F,OAAQ1I,EAAK4B,MAAM4B,KACnB+E,SAAUvI,EAAK4B,MAAMC,KAAK2G,IAC1BzH,MAAOf,EAAKwQ,UAAU7I,MACtB/B,QAAS5F,EAAK4B,MAAMgE,QACpBoE,WAAYhK,EAAK4B,MAAM8O,QACvBvG,YAAanK,EAAKuQ,gBAAgB5I,OAGlCgJ,EAAW,IAAIC,SACnBD,EAASE,OAAO,OAAQ7Q,EAAK4B,MAAMkP,cACnCH,EAASE,OAAO,OAAQzI,KAAKC,UAAUxF,IACvC7C,EAAKU,SAAS,CACVsH,SAAS,IAEb+I,IAAMC,KAAK,mCAAoCL,EAAU,IAGpDlO,KAAK,SAAAC,GACgB,MAAfA,EAAIC,SACH3C,EAAK4K,iBAAiB5K,EAAKY,mBAAmB,qCAAsC,UAAW,UAAW,KAC1GZ,EAAKU,SAAS,CACVqP,QAAQ,EACR/H,SAAS,EACTiJ,gBAAgB,GACjB,WACCzE,WAAW,WAAOxM,EAAKU,SAAS,CAACuQ,gBAAgB,KAAU,YAhJnDjR,EAyJ5BgJ,aAAe,SAACkI,GACZlR,EAAKU,SAAS,CACVgQ,QAASQ,KA3JWlR,EAgK5BmR,iBAAmB,SAACC,GAChBpR,EAAKU,SAAS,CACVoQ,aAAcM,EAAMnI,OAAOoI,MAAM,MA/JrCrR,EAAK4B,MAAQ,CACTmO,QAAQ,EACRvM,KAAM,GACNoC,QAAS,GACT8K,QAAS,IAAItF,KACb0F,aAAc,KACd9I,SAAS,EACTnG,KAAM,KACNlB,UAAS,EACTsQ,gBAAgB,GAEpBjR,EAAKY,mBAAqBkB,IAAMC,YAChC/B,EAAKyQ,gBAAkB3O,IAAMC,YAfL/B,oFAkBR,IAAAgC,EAAA7B,KACV8B,EAAQzB,eAAe0B,QAAQ,YAClCD,EACCE,MAAM,mCAAoC,CACtCC,OAAQ,MACRC,QAAS,IAAIC,QAAQ,CACjBC,cAAiBN,EACjBO,eAAgB,wCAGnBC,KAAK,SAAAC,GACgB,MAAfA,EAAIC,QACHD,EAAIE,OAAOH,KAAK,SAAAI,GACZb,EAAKtB,SAAS,CAAE8C,KAAMX,EAAKW,KAAM3B,KAAKgB,EAAMlC,UAAS,QASrER,KAAKO,SAAS,CACVC,UAAU,qCA8Hb,IAAAoC,EAAA5C,KAEL,OACI6C,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACe,EAAAhB,EAAD,CAAmBiB,IAAK/D,KAAKS,qBAC7BoC,EAAAC,EAAAC,cAAA,OAAKI,UAAU,uBACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACXN,EAAAC,EAAAC,cAACoO,EAAD,SAIZtO,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,iCACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,uDACXN,EAAAC,EAAAC,cAAA,kEACAF,EAAAC,EAAAC,cAAA,UAAQjC,KAAK,SAASqC,UAAU,4BAA4BD,QAASlD,KAAK2P,WAA1E,kBAIZ9M,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACuL,EAAAxL,EAAD,CACIwK,KAAK,KACL3B,KAAM3L,KAAKyB,MAAMmO,OACjBrB,OAvBF,kBAAM3L,EAAKrC,SAAS,CAAEqP,QAAQ,KAwB5Bd,kBAAgB,gCAEhBjM,EAAAC,EAAAC,cAACe,EAAAhB,EAAD,CAAmBiB,IAAK/D,KAAKsQ,kBAC7BzN,EAAAC,EAAAC,cAACuL,EAAAxL,EAAM0L,OAAP,CAAcC,aAAW,GACrB5L,EAAAC,EAAAC,cAACuL,EAAAxL,EAAM4L,MAAP,CAAapL,GAAG,gCAAhB,kBAIJT,EAAAC,EAAAC,cAACuL,EAAAxL,EAAM6L,KAAP,KACI9L,EAAAC,EAAAC,cAACqO,EAAAtO,EAAKuM,MAAN,KACIxM,EAAAC,EAAAC,cAACqO,EAAAtO,EAAKuM,MAAN,CAAYgC,UAAU,6BAClBxO,EAAAC,EAAAC,cAACqO,EAAAtO,EAAKwO,MAAN,mBACAzO,EAAAC,EAAAC,cAACqO,EAAAtO,EAAKyO,QAAN,CAAczQ,KAAK,QAAQ0Q,YAAY,2BAA2BzN,IAAK,SAAA0N,GAAK,OAAI7O,EAAKyN,UAAYoB,MAErG5O,EAAAC,EAAAC,cAACqO,EAAAtO,EAAKuM,MAAN,CAAYgC,UAAU,8BAClBxO,EAAAC,EAAAC,cAACqO,EAAAtO,EAAKwO,MAAN,2BACAzO,EAAAC,EAAAC,cAAC2O,EAAA5O,EAAD,CAAYK,UAAU,QAClBN,EAAAC,EAAAC,cAAC4O,EAAA7O,EAAD,CACI0O,YAAY,gBACZI,aAAW,gBACXC,mBAAiB,eACjB9N,IAAK,SAAA0N,GAAK,OAAI7O,EAAKoN,UAAYyB,KAEnC5O,EAAAC,EAAAC,cAAC2O,EAAA5O,EAAWgP,OAAZ,KACIjP,EAAAC,EAAAC,cAAC8L,EAAA/L,EAAD,CAAQI,QAAWlD,KAAK6P,WAAYhM,QAAQ,qBAA5C,SAIRhB,EAAAC,EAAAC,cAAA,MAAII,UAAU,eACVN,EAAAC,EAAAC,cAACgP,EAAA,EAAD,CAAU3Q,SAAU,IAAK4Q,OAAO,YAExBhS,KAAKyB,MAAMgE,QAAQQ,IAAI,SAAAgM,GAAM,OAAOpP,EAAAC,EAAAC,cAAA,MAAII,UAAU,qBAAqBD,QAAS,kBAAMN,EAAKqN,WAAWgC,EAAErI,MAAMA,IAAKqI,EAAErI,KAAMqI,EAAE5O,WAM7IR,EAAAC,EAAAC,cAACmP,EAAApP,EAAD,KACID,EAAAC,EAAAC,cAACoP,EAAArP,EAAD,KACJD,EAAAC,EAAAC,cAACqO,EAAAtO,EAAKuM,MAAN,CAAYgC,UAAU,cAClBxO,EAAAC,EAAAC,cAACqO,EAAAtO,EAAKwO,MAAN,2CACAzO,EAAAC,EAAAC,cAAC2O,EAAA5O,EAAD,KACAD,EAAAC,EAAAC,cAACqP,EAAA,EAAD,CACIC,QAAM,EACNC,SAAUtS,KAAKyB,MAAM8O,QACrBlJ,SAAUrH,KAAK6I,aACf0J,gBAAc,EACdC,WAAW,QACXC,cAAe,GACfC,WAAW,uBACXC,YAAY,YAKhB9P,EAAAC,EAAAC,cAACoP,EAAArP,EAAD,CAAK8P,GAAG,KACR/P,EAAAC,EAAAC,cAACqO,EAAAtO,EAAKuM,MAAN,CAAYgC,UAAU,cAClBxO,EAAAC,EAAAC,cAACqO,EAAAtO,EAAKwO,MAAN,0BACIzO,EAAAC,EAAAC,cAAA,QAAMd,OAAO,OAAO4Q,OAAO,IAAIvP,GAAG,KAC9BT,EAAAC,EAAAC,cAAA,OAAKI,UAAU,oBACXN,EAAAC,EAAAC,cAAA,SAAOjC,KAAK,OAAOqC,UAAU,eAAe2P,SAAS,GAAGzL,SAAUrH,KAAKgR,wBAO3FnO,EAAAC,EAAAC,cAACqO,EAAAtO,EAAKuM,MAAN,CAAYgC,UAAU,gCAClBxO,EAAAC,EAAAC,cAACqO,EAAAtO,EAAKwO,MAAN,oBACAzO,EAAAC,EAAAC,cAACqO,EAAAtO,EAAKyO,QAAN,CAAcwB,GAAG,WAAWrL,KAAK,IAAI3D,IAAK,SAAA0N,GAAK,OAAI7O,EAAKwN,gBAAkBqB,MAE9E5O,EAAAC,EAAAC,cAAC8L,EAAA/L,EAAD,CAAQI,QAASlD,KAAKmQ,WAAYtM,QAAQ,WAA1C,aAMZhB,EAAAC,EAAAC,cAACiQ,EAAA,EAAD,CAAMC,SAAUjT,KAAKyB,MAAMoG,WAE/BhF,EAAAC,EAAAC,cAACmM,EAAA,EAAD,kBACArM,EAAAC,EAAAC,cAACmQ,GAAD,CAAWxG,WAAY1M,KAAKyB,MAAMjB,SAAUkB,KAAM1B,KAAKyB,MAAMC,KAAMyL,WAAYnN,KAAKyB,MAAMqP,yBAlRzEnP,IAAMyC,WCdlB+O,eAEjB,SAAAA,EAAYvT,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAmT,IACdtT,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAqT,GAAAhT,KAAAH,KAAMJ,KAUV0H,SAAW,SAAC2J,GACRA,EAAMmC,iBACN,IAAIC,EAAY,CACZC,MAAOzT,EAAK4B,MAAM6R,MAClBC,SAAU1T,EAAK4B,MAAM8R,UAGrB1T,EAAK2T,mBACL3T,EAAKY,mBAAmBC,QAAQC,gBAAgB,CAC5CC,MAAO,QACPC,QAAS,yBACTC,KAAM,SACNC,OAAQ,MACRC,UAAW,aACXC,YAAa,CAAC,WAAY,UAC1BC,aAAc,CAAC,WAAY,WAC3BC,QAAS,CAAEC,SAAU,KACrBC,YAAa,CAAEC,OAAO,KAI3BzB,EAAK4T,cACJ5T,EAAKY,mBAAmBC,QAAQC,gBAAgB,CAC5CC,MAAO,QACPC,QAAS,iDACTC,KAAM,SACNC,OAAQ,MACRC,UAAW,aACXC,YAAa,CAAC,WAAY,UAC1BC,aAAc,CAAC,WAAY,WAC3BC,QAAS,CAAEC,SAAU,KACrBC,YAAa,CAAEC,OAAO,KAI3BzB,EAAK2T,oBAAsB3T,EAAK4T,cAC/BzR,MAAM,yCAA0C,CAC5CC,OAAQ,OACR+F,KAAMC,KAAKC,UAAUmL,GACrBnR,QAAS,CACLG,eAAgB,sBAGnBC,KAAK,SAAAC,GACiB,MAAfA,EAAIC,OACJD,EAAIE,OAAOH,KAAK,SAAAI,GACZrC,eAAeqT,QAAQ,WAAYhR,EAAKZ,OACxCjC,EAAKY,mBAAmBC,QAAQC,gBAAgB,CAC5CC,MAAO,UACPC,QAAS,0BACTC,KAAM,UACNC,OAAQ,MACRC,UAAW,aACXC,YAAa,CAAC,WAAY,UAC1BC,aAAc,CAAC,WAAY,WAC3BC,QAAS,CAACC,SAAU,KACpBC,YAAa,CAACC,OAAO,KAEzB+K,WAAW,WAAKsH,SAASC,SAASpQ,KAAK,KAAM,OAI7B,MAAfjB,EAAIC,QACTD,EAAIE,OAAOH,KAAK,SAAAI,GACZ7C,EAAKY,mBAAmBC,QAAQC,gBAAgB,CAC5CC,MAAO,QACPC,QAAS6B,EAAKsK,MACdlM,KAAM,SACNC,OAAQ,MACRC,UAAW,aACXC,YAAa,CAAC,WAAY,UAC1BC,aAAc,CAAC,WAAY,WAC3BC,QAAS,CAACC,SAAU,KACpBC,YAAa,CAACC,OAAO,UApF/BzB,EA6FlBgU,kBAAoB,SAAC5C,GACjB,IAAIqC,EAAQrC,EAAMnI,OAAOtB,MACzB3H,EAAKU,SAAS,CACV+S,MAAOA,KAhGGzT,EAsGlBiU,qBAAuB,SAAC7C,GACpB,IAAIsC,EAAWtC,EAAMnI,OAAOtB,MAC5B3H,EAAKU,SAAS,CACVgT,SAAUA,KAzGA1T,EA6GlB2T,gBAAkB,WAEd,MADS,0JACCO,KAAKC,OAAOnU,EAAK4B,MAAM6R,OAAOW,gBA/G1BpU,EAkHlB4T,WAAa,WACX,OAAmC,IAA5B5T,EAAK4B,MAAM6R,MAAMvM,QAA+C,IAA/BlH,EAAK4B,MAAM8R,SAASxM,QAjH1DlH,EAAK4B,MAAQ,CACT6R,MAAQ,GACRC,SAAW,IAEf1T,EAAKY,mBAAqBkB,IAAMC,YANlB/B,wEAyHd,OAEIgD,EAAAC,EAAAC,cAAA,OAAKI,UAAU,6BACXN,EAAAC,EAAAC,cAACe,EAAAhB,EAAD,CAAmBiB,IAAK/D,KAAKS,qBAC7BoC,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,mCACXN,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,QAAMuE,SAAUtH,KAAKsH,UACjBzE,EAAAC,EAAAC,cAAA,OAAKI,UAAU,cACXN,EAAAC,EAAAC,cAAA,SAAOjC,KAAK,OAAOqC,UAAU,eAAeqO,YAAY,aAAanK,SAAUrH,KAAK6T,qBAExFhR,EAAAC,EAAAC,cAAA,OAAKI,UAAU,cACXN,EAAAC,EAAAC,cAAA,SAAOjC,KAAK,WAAWqC,UAAU,eAAeqO,YAAY,gBAAgBnK,SAAUrH,KAAK8T,wBAE/FjR,EAAAC,EAAAC,cAAA,OAAKI,UAAU,cACXN,EAAAC,EAAAC,cAAA,SAAOjC,KAAK,SAASqC,UAAU,YAAYqE,MAAM,sBA1I9C7F,IAAMyC,WCDpB8P,eAEjB,SAAAA,EAAYtU,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAkU,IACdrU,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAoU,GAAA/T,KAAAH,KAAMJ,KAUVuU,kBAAoB,WAChBtU,EAAK4T,cAZS5T,EAelBuU,SAAW,SAACnD,GACRA,EAAMmC,iBACR,IAAIiB,EAAe,CACfhR,KAAMxD,EAAK4B,MAAM4B,KACjBkQ,SAAU1T,EAAK4B,MAAM8R,SACrBD,MAAOzT,EAAK4B,MAAM6R,OAGlBgB,EAAazU,EAAK0U,aAClBC,EAAc3U,EAAK4T,aAGnBa,GACAzU,EAAKY,mBAAmBC,QAAQC,gBAAgB,CAC5CC,MAAO,QACPC,QAAS,yBACTC,KAAM,SACNC,OAAQ,MACRC,UAAW,aACXC,YAAa,CAAC,WAAY,UAC1BC,aAAc,CAAC,WAAY,WAC3BC,QAAS,CAAEC,SAAU,KACrBC,YAAa,CAAEC,OAAO,KAG3BkT,GACC3U,EAAKY,mBAAmBC,QAAQC,gBAAgB,CAC5CC,MAAO,QACPC,QAAS,iDACTC,KAAM,SACNC,OAAQ,MACRC,UAAW,aACXC,YAAa,CAAC,WAAY,UAC1BC,aAAc,CAAC,WAAY,WAC3BC,QAAS,CAAEC,SAAU,KACrBC,YAAa,CAAEC,OAAO,KAGsC,IAAjEzB,EAAK4B,MAAM8R,SAASrH,cAAcrM,EAAK4B,MAAMgT,iBAC5C5U,EAAKY,mBAAmBC,QAAQC,gBAAgB,CAC5CC,MAAO,QACPC,QAAS,6CACTC,KAAM,SACNC,OAAQ,MACRC,UAAW,aACXC,YAAa,CAAC,WAAY,UAC1BC,aAAc,CAAC,WAAY,WAC3BC,QAAS,CAAEC,SAAU,KACrBC,YAAa,CAAEC,OAAO,KAG3BgT,IAAeE,GAAgF,IAAjE3U,EAAK4B,MAAM8R,SAASrH,cAAcrM,EAAK4B,MAAMgT,iBAG1EzS,MAAM,qCAAsC,CACxCC,OAAQ,OACR+F,KAAMC,KAAKC,UAAUmM,GACrBnS,QAAS,CACLG,eAAgB,sBAGnBC,KAAK,SAAAC,GACiB,MAAfA,EAAIC,QACJ8J,QAAQC,IAAIhK,EAAIC,QAChB3C,EAAKY,mBAAmBC,QAAQC,gBAAgB,CAC5CC,MAAO,UACPC,QAAS,2BACTC,KAAM,UACNC,OAAQ,MACRC,UAAW,aACXC,YAAa,CAAC,WAAY,UAC1BC,aAAc,CAAC,WAAY,WAC3BC,QAAS,CAACC,SAAU,KACpBC,YAAa,CAACC,OAAO,KAEzB+K,WAAW,WAAKsH,SAASC,SAASpQ,KAAK,UAAW,MAE9B,MAAfjB,EAAIC,QACTD,EAAIE,OAAOH,KAAK,SAAAI,GACZ7C,EAAKY,mBAAmBC,QAAQC,gBAAgB,CAC5CC,MAAO,QACPC,QAAS6B,EAAKsK,MACdlM,KAAM,SACNC,OAAQ,MACRC,UAAW,aACXC,YAAa,CAAC,WAAY,UAC1BC,aAAc,CAAC,WAAY,WAC3BC,QAAS,CAACC,SAAU,KACpBC,YAAa,CAACC,OAAO,UAvG7BzB,EAgHlBgU,kBAAoB,SAAC5C,GACjB,IAAIqC,EAAQrC,EAAMnI,OAAOtB,MACzB3H,EAAKU,SAAS,CACV+S,MAAOA,KAnHGzT,EAwHlB6U,iBAAmB,SAACzD,GAChB,IAAI5N,EAAO4N,EAAMnI,OAAOtB,MACxB3H,EAAKU,SAAS,CACV8C,KAAMA,KA3HIxD,EA+HlBiU,qBAAuB,SAAC7C,GACpB,IAAIsC,EAAWtC,EAAMnI,OAAOtB,MAC5B3H,EAAKU,SAAS,CACVgT,SAAUA,KAlIA1T,EAsIlB8U,2BAA6B,SAAC1D,GAC1B,IAAI2D,EAAa3D,EAAMnI,OAAOtB,MAC9B3H,EAAKU,SAAS,CACVkU,eAAgBG,KAzIN/U,EAgJlB4T,WAAa,WAET,OAA+B,IAA5B5T,EAAK4B,MAAM6R,MAAMvM,QAA2C,IAA3BlH,EAAK4B,MAAM4B,KAAK0D,QAA+C,IAA/BlH,EAAK4B,MAAM8R,SAASxM,QAAqD,IAArClH,EAAK4B,MAAMgT,eAAe1N,QAlJpHlH,EA2JlB0U,WAAa,WAET,GAAuC,IAApCP,OAAOnU,EAAK4B,MAAM6R,OAAOvM,OACxB,MAFK,0JAEKgN,KAAKC,OAAOnU,EAAK4B,MAAM6R,OAAOW,gBA5J5CpU,EAAK4B,MAAQ,CACT6R,MAAO,GACPC,SAAU,GACVkB,eAAgB,GAChBpR,KAAM,IAEVxD,EAAKY,mBAAqBkB,IAAMC,YARlB/B,wEAmKd,OACIgD,EAAAC,EAAAC,cAAA,OAAKI,UAAU,6BACXN,EAAAC,EAAAC,cAACe,EAAAhB,EAAD,CAAmBiB,IAAK/D,KAAKS,qBACjCoC,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,mCACXN,EAAAC,EAAAC,cAAA,gCACAF,EAAAC,EAAAC,cAAA,QAAMuE,SAAUtH,KAAKoU,UACjBvR,EAAAC,EAAAC,cAAA,OAAKI,UAAU,cACXN,EAAAC,EAAAC,cAAA,SAAOjC,KAAK,OAAOuC,KAAK,OAAOF,UAAU,eAAeqO,YAAY,YAAYnK,SAAUrH,KAAK0U,oBAEnG7R,EAAAC,EAAAC,cAAA,OAAKI,UAAU,cACXN,EAAAC,EAAAC,cAAA,SAAOjC,KAAK,OAAOuC,KAAK,QAAQF,UAAU,eAAeqO,YAAY,aAAanK,SAAUrH,KAAK6T,qBAErGhR,EAAAC,EAAAC,cAAA,OAAKI,UAAU,cACXN,EAAAC,EAAAC,cAAA,SAAOjC,KAAK,WAAWuC,KAAK,WAAWF,UAAU,eAAeqO,YAAY,gBAAgBnK,SAAUrH,KAAK8T,wBAE/GjR,EAAAC,EAAAC,cAAA,OAAKI,UAAU,cACXN,EAAAC,EAAAC,cAAA,SAAOjC,KAAK,WAAWuC,KAAK,cAAcF,UAAU,eAAeqO,YAAY,uBAAuBnK,SAAUrH,KAAK2U,8BAEzH9R,EAAAC,EAAAC,cAAA,OAAKI,UAAU,cACXN,EAAAC,EAAAC,cAAA,SAAOO,GAAG,iBAAiBxC,KAAK,SAASqC,UAAU,YAAYqE,MAAM,yBAzL3D7F,IAAMyC,WCOtCyQ,eAEF,SAAAA,EAAYjV,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA6U,IACfhV,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA+U,GAAA1U,KAAAH,KAAMJ,KACD6B,MAAM,CACTjB,UAAU,GAHGX,wEAQd,OACIgD,EAAAC,EAAAC,cAAC+R,EAAA,EAAD,KACIjS,EAAAC,EAAAC,cAACF,EAAAC,EAAMiS,SAAP,KACIlS,EAAAC,EAAAC,cAACiS,EAAD,MACAnS,EAAAC,EAAAC,cAACkS,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW1F,KACjC7M,EAAAC,EAAAC,cAACkS,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,SAASC,UAAWjC,KACtCtQ,EAAAC,EAAAC,cAACkS,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,YAAYC,UAAWlB,cAhBzCvS,IAAMyC,WAuB1BiR,IAASC,OAAOzS,EAAAC,EAAAC,cAACwS,GAAD,MAAU5B,SAAS6B,eAAe","file":"static/js/main.25febcee.chunk.js","sourcesContent":["import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\nimport NavDropdown from 'react-bootstrap/NavDropdown';\nimport ReactNotification from \"react-notifications-component\";\nimport \"react-notifications-component/dist/theme.css\";\n\n\nclass NavBar extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            loggedIn:false,\n            user: \"\"\n        };\n        this.notificationDOMRef = React.createRef();\n    }\n\n    componentWillMount(){\n        const token = sessionStorage.getItem('jwtToken');\n        if(token) {\n            fetch(\"http://localhost:3001/api/verify\", {\n                method: 'GET',\n                headers: new Headers({\n                    'Authorization': token,\n                    'Content-Type': 'application/x-www-form-urlencoded'\n                })\n            }).then(res => {\n                if(res.status === 200){\n                    res.json().then(data => {\n                        this.setState({\n                            loggedIn: true,\n                            user: data\n\n                        });\n                    })\n                }\n                else{\n                    this.setState({\n                        loggedIn: false\n                    });\n                }\n            })\n        }\n    };\n\n    signOut = () => {\n        sessionStorage.removeItem('jwtToken');\n        this.setState(\n            {\n                loggedIn:false\n            }\n        );\n        this.notificationDOMRef.current.addNotification({\n            title: \"Success!\",\n            message: \"Successfully logged out!\",\n            type: \"success\",\n            insert: \"top\",\n            container: \"top-center\",\n            animationIn: [\"animated\", \"fadeIn\"],\n            animationOut: [\"animated\", \"fadeOut\"],\n            dismiss: { duration: 2000 },\n            dismissable: { click: true }\n        });\n        this.props.history.push('/');\n    };\n\n    render(){\n\n        let signed;\n        if(this.state.loggedIn === false){\n            signed = (\n                <Nav>\n                    <Nav.Link onClick={() => this.props.history.push(\"/login\")}>Sign In</Nav.Link>\n                    <Nav.Link onClick={() => this.props.history.push(\"/register\")}> Sign Up</Nav.Link>\n                </Nav>);\n        }\n        else{\n            signed = (\n                <Nav className=\"dropdownToggle\">\n                    <NavDropdown title={this.state.user.name} id=\"basic-nav-dropdown\">\n                        <NavDropdown.Item  href=\"#action/3.1\">Action</NavDropdown.Item>\n                        <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n                        <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n                        <NavDropdown.Divider />\n                        <NavDropdown.Item onClick={this.signOut}>Sign Out</NavDropdown.Item>\n                    </NavDropdown>\n                </Nav>)\n        }\n\n        return(\n            <Navbar bg=\"secondary\" expand=\"lg\" variant=\"dark\">\n                <ReactNotification ref={this.notificationDOMRef} />\n                <Navbar.Brand href=\"/\">E-Vote</Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Nav className=\"mr-auto\">\n                    <Nav.Link onClick={() => this.props.history.push(\"/\")}>Home</Nav.Link>\n                </Nav>\n                {signed}\n                </Navbar.Collapse>\n            </Navbar>\n        )\n    }\n}\n\nexport default withRouter(NavBar)","import React from 'react';\nimport Carousel from 'react-bootstrap/Carousel';\n\nexport default class ControlledCarousel extends React.Component {\n    constructor(props, context) {\n        super(props, context);\n\n        this.handleSelect = this.handleSelect.bind(this);\n\n        this.state = {\n            index: 0,\n            direction: null,\n        };\n    }\n\n    handleSelect(selectedIndex, e) {\n        this.setState({\n            index: selectedIndex,\n            direction: e.direction,\n        });\n    }\n\n    render() {\n        const { index, direction } = this.state;\n\n        return (\n            <Carousel\n                activeIndex={index}\n                direction={direction}\n                onSelect={this.handleSelect}\n            >\n                <Carousel.Item>\n                    <img\n                        className=\"d-block w-100\"\n                        src=\"https://worldofweirdthings.com/wp-content/uploads/evoting_1200.jpg\"\n                        alt=\"First slide\"\n                        height=\"600\"\n                        width=\"800\"\n                    />\n                    <Carousel.Caption>\n                        <h3>First slide label</h3>\n                        <p>Nulla vitae elit libero, a pharetra augue mollis interdum.</p>\n                    </Carousel.Caption>\n                </Carousel.Item>\n                <Carousel.Item>\n                    <img\n                        className=\"d-block w-100\"\n                        src=\"https://image.chitra.live/api/v1/wps/504ee78/6712fd67-b5ed-48ca-a23b-340186752bc6/3/e-voting-620x354.jpg\"\n                        alt=\"Third slide\"\n                        height=\"600\"\n                        width=\"600\"\n                    />\n\n                    <Carousel.Caption>\n                        <h3>Second slide label</h3>\n                        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\n                    </Carousel.Caption>\n                </Carousel.Item>\n                <Carousel.Item>\n                    <img\n                        className=\"d-block w-100\"\n                        src=\"http://www.iheartradio.ca/image/policy:1.8457991:1537795476/Voting%20online-CarmenMurillo.jpg?a=16%3A9&w=1000&$p$a$w=0e94c4b   \"\n                        alt=\"Third slide\"\n                        height=\"600\"\n                        width=\"600\"\n                    />\n\n                    <Carousel.Caption>\n                        <h3>Third slide label</h3>\n                        <p>\n                            Praesent commodo cursus magna, vel scelerisque nisl consectetur.\n                        </p>\n                    </Carousel.Caption>\n                </Carousel.Item>\n            </Carousel>\n        );\n    }\n}\n","import React from 'react';\nimport Chart from 'react-apexcharts';\n\n\n\nexport default class ChartBar extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state={\n            data: null,\n            options: {\n                chart: {\n                    id: 'votesChart'\n                },\n                xaxis: {\n                    categories: []\n                }\n            },\n            series: [{\n                name: 'Voting Results',\n                data: []\n            }]\n        }\n\n    }\n\n    componentWillReceiveProps(nextProps){\n        if(this.props.change === true){\n            let votingOptions = nextProps.data.options.map(option => {return option.name});\n            let votingValues = nextProps.data.options.map(option => {return option.votes});\n            debugger;\n        this.setState({\n            data: nextProps.data,\n            options: {\n                xaxis:{\n                    categories: votingOptions\n                }\n            },\n            series: [{\n                data: votingValues\n            }\n            ]\n        });\n        }\n    }\n\n\n    componentDidMount(){\n        let votingOptions = this.props.data.options.map(option => {return option.name});\n        let votingValues = this.props.data.options.map(option => {return option.votes});\n        this.setState({\n            data: this.props.data,\n            options: {\n                xaxis:{\n                    categories: votingOptions\n                }\n            },\n            series: [{\n                data: votingValues\n            }\n            ]\n        });\n    }\n\n    render(){\n        return(<div>\n            <Chart options={this.state.options} series={this.state.series} type=\"bar\" width={500} height={330} />\n        </div>);\n    }\n}","import React from 'react';\nimport { Comment, Avatar, Form, Button, List, Input } from 'antd';\n\nconst { TextArea } = Input;\n\n\nconst CommentList = ({ comments }) => (\n    <List\n        dataSource={comments}\n        header={`${comments.length} Comments`}\n        itemLayout=\"horizontal\"\n        renderItem={props => <Comment {...props} />}\n    />\n);\n\nconst Editor = ({ onChange, onSubmit, submitting, value }) => (\n    <div>\n        <Form.Item>\n            <TextArea rows={4}  onChange={onChange} value={value} />\n        </Form.Item>\n        <Form.Item>\n            <Button htmlType=\"submit\" loading={submitting} onClick={onSubmit} type=\"primary\">\n                Add Comment\n            </Button>\n        </Form.Item>\n    </div>\n);\n\nexport default class Comments extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            submitting: false,\n            value: \"\",\n            comments: []\n        }\n    }\n\n    componentWillMount(){\n        if(this.props.data.comments.length === 0)\n            return;\n\n        const comments = this.props.data.comments.map(comment => {\n            return {\n                author: comment.authorName,\n                avatar: 'https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png',\n                content: <p>{comment.content}</p>,\n                datetime: comment.createdAt\n            }\n        });\n        this.setState({\n            comments: comments,\n        });\n    }\n\n\n    handleSubmit = () => {\n        if(!this.state.value || !this.props.user){\n            return;\n        }\n\n        this.setState({\n            submitting: true,\n        });\n\n        fetch('http://localhost:3001/api/comment', {\n            method: 'POST',\n            body: JSON.stringify({pollId: this.props.data.id, authorId: this.props.user._id ,authorName: this.props.user.name, value: this.state.value}),\n            headers: {\n                'Content-Type' : 'application/json'\n            }\n        })\n            .then(res => {\n                if(res.status === 200){\n                    res.json().then(data => {\n                        this.setState({\n                            submitting: false,\n                            value: '',\n                            comments: [{\n                                author: data.authorName,\n                                avatar: 'https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png',\n                                content: <p>{data.content}</p>,\n                                datetime: data.createdAt\n                            },\n                                ... this.state.comments\n                            ],\n                        });\n\n                    })\n                }\n            })\n    };\n\n    handleChange = (e) => {\n        this.setState({\n            value: e.target.value,\n        });\n    };\n\n\n\n\n\n    render(){\n        const { comments, submitting, value } = this.state;\n        return(\n            <div className=\"container-fluid\">\n                <div className=\"row\">\n                    <div className=\"col-md-12\">\n                {comments.length > 0 && <CommentList comments={comments} />}\n                <Comment\n                    avatar={\n                        <Avatar\n                            src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\"\n                            alt=\"Han Solo\"\n                        />\n                    }\n                    content={\n                        <Editor\n                            onChange={this.handleChange}\n                            onSubmit={this.handleSubmit}\n                            submitting={submitting}\n                            value={value}\n                        />\n                    }\n                />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport \"antd/dist/antd.css\";\nimport \"./index.css\";\nimport { List, Avatar, Icon, Skeleton, Divider, Radio, Statistic, Collapse, message } from \"antd\";\nimport ReactNotification from \"react-notifications-component\";\nimport \"react-notifications-component/dist/theme.css\";\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Image from 'react-bootstrap/Image';\nimport ChartBar from './Chart';\nimport Comments from './Comments';\n\n\n\n\n\nconst { Countdown } = Statistic;\nconst { Panel } = Collapse;\n\nconst IconText = ({ type, text, onClick, display }) => (\n    <span>\n    <Icon type={type} style={{ marginRight: 8, display: display}} onClick={onClick}  />\n        {text}\n  </span>\n);\n\n\nconst poll =\n    {\n        \"_id\": \"\",\n        \"author\": \"\",\n        \"authorId\": \"\",\n        \"title\": \"\",\n        \"options\": [\n            {\n                \"_id\": \"\",\n                \"name\": \"\",\n                \"key\": \"\",\n                \"votes\": 0\n            },\n            {\n                \"_id\": \"\",\n                \"name\": \"\",\n                \"key\": \"\",\n                \"votes\": 0\n            }\n        ],\n        \"expireDate\": \"\",\n        \"image\": {\n            \"_id\": \"\",\n            \"url\": \"\",\n            \"type\": \"\"\n        },\n        \"description\": \"\",\n        \"likes\": 0,\n        \"comments\": [],\n        \"createdAt\": \"\",\n        \"updatedAt\": \"\",\n        \"__v\": 0\n    };\n\nexport default class ListPolls extends React.Component{\n\n    constructor(props){\n        super(props);\n\n        this.state={\n            loading: false,\n            polls: [],\n            listData: [],\n            visible: false,\n            selectedPoll: poll,\n            radioValue: null,\n            show: false,\n            user: null,\n            change: false\n        };\n\n        this.notificationDOMREF = React.createRef();\n    }\n\n\n    componentDidMount(){\n        this.getPolls();\n    }\n\n   componentWillReceiveProps(nextProps){\n        let someProps = nextProps!== null ? nextProps : this.props;\n       this.setState({\n           user: someProps.user\n       }, () => {\n                  if(nextProps.hasChanged === true)\n                   this.getPolls();\n       });\n\n\n    }\n\n    getPolls = () => {\n        this.setState({\n            loading: true\n        }, () => {\n            fetch('http://localhost:3001/api/polls')\n                .then(res => {\n                    if (res.status === 200) {\n                        res.json().then(data => {\n                            if(data.length !== 0){\n                            this.setState({\n                                loading: false,\n                                polls: data,\n                                selectedPoll: data[0]\n                            }, () => {this.populateData()});\n                        }\n                        })\n                    }\n                })\n        });\n    };\n\n\n\n\n    showNotification = (ref,message, title, type, duration) => {\n\n        ref.current.addNotification({\n            title: title,\n            message: message,\n            type: type,\n            insert: \"top\",\n            container: \"top-center\",\n            animationIn: [\"animated\", \"fadeIn\"],\n            animationOut: [\"animated\", \"fadeOut\"],\n            dismiss: { duration: duration },\n            dismissable: { click: true }\n        });\n\n    };\n\n\n    populateData = () => {\n          let listData = [];\n          this.state.polls.forEach(item => {\n              listData.push({\n                  title: item.title,\n                  avatar: \"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\",\n                  content: item.description,\n                  imageUrl: item.image.url,\n                  createdAt: item.createdAt,\n                  likes: item.likes,\n                  comments: item.comments,\n                  id: item._id,\n                  authorId: item.authorId,\n              });\n          });\n          this.setState({\n              listData: listData,\n              user: this.props.user\n          });\n\n    };\n\n    handlePollClick = (id) => {\n        let poll = this.getPollById(id);\n        const expDate = new Date(poll.expireDate).valueOf();\n        const dateNow = Date.now();\n\n        if(dateNow>=expDate){\n            this.showNotification(this.notificationDOMREF,\"This poll has expired so you won't be able to vote!\",\"Info\",\"warning\",2000);\n        }\n\n      this.setState({\n          visible: true,\n          selectedPoll: poll\n      });\n    };\n\n    handleOk = () => {\n      this.setState({\n          visible: false\n      })\n    };\n\n\n    handleCancel = () => {\n      this.setState({\n          visible: false\n      })\n    };\n\n    getPollById = (id) =>{\n      let poll = this.state.polls.filter(poll => {\n          return poll._id === id;\n      });\n      return poll[0];\n    };\n\n    onChange = (e) => {\n        this.setState({\n            radioValue: e.target.value\n        });\n    };\n\n    handleClose = () =>{\n      this.setState({\n          show: false\n      });\n    };\n\n    openSecondModal = () => {\n      this.setState({\n          show: true\n      });\n    };\n\n    handleOkVote = () => {\n        let currentPollId = this.state.selectedPoll._id;\n        const vote = {\n          pollId: currentPollId,\n          voteId: this.state.radioValue,\n          userId: this.state.user._id\n        };\n\n        fetch(\"http://localhost:3001/api/vote\",{\n            method: 'POST',\n            body: JSON.stringify(vote),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n            .then(res => {\n                if(res.status === 200) {\n                    let alteredSelectedPoll = this.state.selectedPoll;\n                    alteredSelectedPoll.options = this.state.selectedPoll.options.map(option => {\n                        if(option._id.localeCompare(vote.voteId) === 0){\n                            option.votes++;\n                        }\n                        return option;\n                    });\n\n                    let voteToAdd = {\n                        pollId: vote.pollId,\n                        voteId: vote.voteId\n                    };\n                    let alteredUser = this.state.user;\n                    alteredUser.votes.push(voteToAdd);\n                    this.setState({\n                        selectedPoll: alteredSelectedPoll,\n                        user: alteredUser,\n                        show: false,\n                        change: true\n                    }, () => { setTimeout(()=> {this.setState({change: false})},2000)});\n                }\n                else{\n                    res.json().then(data => {console.log(data)});\n                }\n            })\n    };\n\n    checkForRadioAvailability = (pollId, expireDate) => {\n        const numExpDate = new Date(expireDate).valueOf();\n        const numDateNow = Date.now();\n\n        if(numDateNow >= numExpDate){\n            return true;\n        }\n\n        if(this.props.isLoggedIn) {\n            let votes = this.state.user.votes;\n            if(votes.length === 0){\n                return false;\n            }\n            let voted = votes.filter(vote => {\n                return vote.pollId.localeCompare(pollId) === 0\n            });\n            return voted.length !== 0\n        }\n        else{\n            return true;\n        }\n\n    };\n\n    checkIfChecked = (pollId, optionId) => {\n      if(this.props.isLoggedIn) {\n\n          let votes = this.state.user.votes;\n          if(votes.length === 0){\n              return false;\n          }\n          let voted = votes.filter(vote => {\n              return vote.voteId.localeCompare(optionId) === 0;\n          });\n          return voted.length!==0;\n      }\n      else{\n          return false;\n      }\n\n    };\n\n\n    addLike = (pollId) => {\n        if(this.props.isLoggedIn) {\n\n            fetch('http://localhost:3001/api/like', {\n                method: 'POST',\n                body: JSON.stringify({pollId: pollId}),\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            })\n                .then(res => {\n                    if (res.status === 200) {\n                        let listData = this.state.listData.map(item => {\n                            if (item.id.localeCompare(pollId) === 0) {\n                                item.likes++;\n                            }\n                            return item;\n                        });\n\n                        this.setState({\n                            listData: listData\n                        });\n\n                    }\n                })\n        }\n    };\n\n    deletePoll = (pollId) => {\n        fetch('http://localhost:3001/api/delete', {\n            method: 'POST',\n            body: JSON.stringify({pollId: pollId}),\n            headers: {\n                'Content-Type' : 'application/json'\n            }\n        })\n            .then(res => {\n                if(res.status === 200){\n                    message.success(\"The pole was successfully removed!\");\n                    this.getPolls();\n                }\n                else if(res.status === 500){\n                    message.error(\"There was an error while removing the poll! Try again!\");\n                }\n            })\n    };\n\n    checkIfSameAuthor = (authorId, user) => {\n        if(this.props.isLoggedIn){\n            return authorId.localeCompare(user._id) === 0 ? 'inline':'none'\n        }\n        else{\n            return 'none';\n        }\n\n    };\n\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col md-12\">\n                        <Skeleton loading={this.state.loading} active>\n                        <List\n                            itemLayout=\"vertical\"\n                            size=\"large\"\n                            pagination={{\n                                onChange: page => {\n                                    console.log(page);\n                                },\n                                pageSize: 3\n                            }}\n                            dataSource={this.state.listData}\n                            footer={\n                                <div>\n                                    <b>ant design</b> footer part\n                                </div>\n                            }\n                            renderItem={item => (\n                                <List.Item\n                                    key={item.title}\n                                    actions={[\n                                        <IconText type=\"like-o\" text={item.likes} onClick={() => {this.addLike(item.id)}} display='inline' />,\n                                        <Collapse accordion bordered={false} expandIcon={() => <IconText type=\"message\" text={item.comments.length} display='inline'/>}>\n                                            <Panel key=\"1\" header=\"\">\n                                                <Comments data={item} user={this.state.user}/>\n                                            </Panel>\n                                        </Collapse>,\n                                        <IconText type=\"delete\" onClick={() => {this.deletePoll(item.id)}} display={this.checkIfSameAuthor(item.authorId, this.props.user)}/>\n                                    ]}\n                                    extra={\n                                        <button className=\"invisible-button\" onClick={() => this.handlePollClick(item.id)}>\n                                        <img\n                                            width={272}\n                                            alt=\"logo\"\n                                            src={'http://localhost:3001/api/image/' + item.imageUrl}\n                                        />\n                                        </button>\n                                    }\n                                >\n                                    <List.Item.Meta\n                                        avatar={<Avatar src={item.avatar} />}\n                                        title={<button className=\"invisible-button\" onClick={() => this.handlePollClick(item.id)}>{item.title}</button>}\n                                        description={`Created at: ${new Date(this.state.selectedPoll.createdAt).toLocaleString('mk-MK', {timeZone: 'UTC'})}`}\n                                    />\n                                    {item.content}\n                                </List.Item>\n                            )}\n                        />\n                        </Skeleton>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <Modal show={this.state.show} onHide={this.handleClose}>\n                        <Modal.Header closeButton>\n                            <Modal.Title>Are You Sure?</Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body>By clicking OK you accept to vote for the selected option!</Modal.Body>\n                        <Modal.Footer>\n                            <Button variant=\"secondary\" onClick={this.handleClose}>\n                                Close\n                            </Button>\n                            <Button variant=\"primary\" onClick={this.handleOkVote}>\n                                OK\n                            </Button>\n                        </Modal.Footer>\n                    </Modal>\n                </div>\n                <div className=\"row\">\n                    <ReactNotification ref={this.notificationDOMREF}/>\n                    <Modal\n                    size=\"lg\"\n                    show={this.state.visible}\n                    onHide={this.handleCancel}\n                    aria-labelledby=\"example-modal-sizes-title-lg\"\n\n                    >\n\n                        <Modal.Header closeButton>\n                         <Modal.Title id=\"example-modal-sizes-title-lg\">\n                             {this.state.selectedPoll.title}\n                            </Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body>\n                            <div className=\"container\">\n                                <div className=\"row\">\n                                    <div className=\"col-md-4\">\n                                        <p><small>Author: {this.state.selectedPoll.author}</small></p>\n                                    </div>\n                                    <div className=\"col-md-4\">\n                                        <p><small>Created at: {new Date(this.state.selectedPoll.createdAt).toLocaleString('mk-MK', {timeZone: 'UTC'})}</small></p>\n                                    </div>\n                                    <div className=\"col-md-4\">\n                                        <Countdown title=\"Time Remaining\" value={this.state.selectedPoll.expireDate} format=\"D - H : m : s \" />\n                                    </div>\n                                    <div className=\"col-md-12\">\n                                        <Image src={'http://localhost:3001/api/image/' + this.state.selectedPoll.image.url}\n                                             alt={this.state.selectedPoll._id}\n                                             height={300}\n                                             fluid\n                                        />\n                                    </div>\n                                    <div className=\"col-md-12\">\n                                        <h6>Description:</h6>\n                                        <h6>{this.state.selectedPoll.description }</h6>\n                                    </div>\n                                    <Divider orientation=\"left\">Voting Options</Divider>\n                                    <div className=\"col-md-3 mx-auto\">\n                                        <Radio.Group onChange={this.onChange} value={this.state.radioValue}>\n                                            {\n                                                this.state.selectedPoll.options.map(option => {\n                                                    return <Radio key={option._id} onClick={this.openSecondModal}  value={option._id} disabled={this.checkForRadioAvailability(this.state.selectedPoll._id, this.state.selectedPoll.expireDate)}\n                                                                 checked={this.checkIfChecked(this.state.selectedPoll._id, option._id)} defaultChecked={this.checkIfChecked(this.state.selectedPoll._id, option._id)}>{option.name}</Radio>\n                                                })\n                                            }\n                                        </Radio.Group>\n                                    </div>\n                                    <Divider orientation=\"left\">Votes Result</Divider>\n                                    <div className=\"col-auto mx-auto\">\n                                        <ChartBar data={this.state.selectedPoll} change={this.state.change}/>\n                                    </div>\n                                    <Divider/>\n                                </div>\n                            </div>\n                        </Modal.Body>\n                    </Modal>\n                </div>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport ControlledCarousel from './ControlledCarousel';\nimport ReactNotification from \"react-notifications-component\";\nimport Modal from \"react-bootstrap/Modal\";\nimport \"react-notifications-component/dist/theme.css\";\nimport Form from \"react-bootstrap/Form\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Button from \"react-bootstrap/Button\";\nimport FlipMove from \"react-flip-move\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport axios from 'axios';\nimport { Spin, Divider } from 'antd';\nimport ListPolls from './ListPolls';\n\n\n\nexport default class App extends React.Component {\n\n    constructor(props, context) {\n        super(props, context);\n\n        this.state = {\n            lgShow: false,\n            name: \"\",\n            options: [],\n            endDate: new Date(),\n            selectedFile: null,\n            loading: false,\n            user: null,\n            loggedIn:false,\n            changeOccurred: false\n        };\n        this.notificationDOMRef = React.createRef();\n        this.notificationDOM = React.createRef();\n    }\n\n    componentWillMount(){\n        const token = sessionStorage.getItem('jwtToken');\n        if(token){\n            fetch(\"http://localhost:3001/api/verify\", {\n                method: 'GET',\n                headers: new Headers({\n                    'Authorization': token,\n                    'Content-Type': 'application/x-www-form-urlencoded'\n                })\n            })\n                .then(res => {\n                    if(res.status === 200){\n                        res.json().then(data => {\n                            this.setState({ name: data.name, user:data, loggedIn:true});\n                        });\n\n                    }\n                });\n\n\n        }\n        else{\n            this.setState({\n                loggedIn: false\n            });\n        }\n\n\n    };\n\n    showNotification = (ref,message, title, type, duration) => {\n\n        ref.current.addNotification({\n            title: title,\n            message: message,\n            type: type,\n            insert: \"top\",\n            container: \"top-center\",\n            animationIn: [\"animated\", \"fadeIn\"],\n            animationOut: [\"animated\", \"fadeOut\"],\n            dismiss: { duration: duration },\n            dismissable: { click: true }\n        });\n\n    };\n\n\n    openModal = () => {\n        const token = sessionStorage.getItem('jwtToken');\n        if(this.state.loggedIn && token){\n            this.setState({\n                lgShow: true\n            });\n        }\n        else{\n            this.showNotification(this.notificationDOMRef,\"You have to be logged in to create a poll! Redirecting to Login page shortly! \",\"Info\",\"warning\",2000);\n            setTimeout(() => this.props.history.push('/login'),1500);\n        }\n\n\n    };\n\n    addOptions= () => {\n        let hasSame = false;\n         for(let i=0; i<this.state.options.length;i++){\n             if(this.state.options[i].key === this.textInput.value){\n                 hasSame = true;\n                 break;\n             }\n         }\n        if(this.textInput.value.localeCompare(\"\") !== 0 && !hasSame) {\n            let options = this.state.options;\n            options.push(\n                {\n                    name: this.textInput.value,\n                    key: this.textInput.value,\n                    votes: 0\n                }\n            );\n            this.setState({\n                options: options\n            }, () => {this.textInput.value=\"\";});\n        }\n    };\n\n    deleteItem = (key) => {\n      let filteredItems =  this.state.options.filter(item => {\n          return (item.key !== key);\n      });\n      this.setState({\n          options: filteredItems\n      });\n    };\n\n    onRegister = () =>{\n      if(this.pollDescription.value.length === 0 || this.pollTitle.value.length === 0 || this.state.options.length ===0 || this.state.options.length === 0){\n\n          this.showNotification(this.notificationDOM,\"All fields must not be empty!\", \"Error\", \"danger\", 2000);\n      }\n      else{\n        let data = {\n            author: this.state.name,\n            authorId: this.state.user._id,\n            title: this.pollTitle.value,\n            options: this.state.options,\n            expireDate: this.state.endDate,\n            description: this.pollDescription.value\n        };\n\n        let toUpload = new FormData();\n        toUpload.append('file', this.state.selectedFile);\n        toUpload.append('json', JSON.stringify(data));\n        this.setState({\n            loading: true\n        });\n        axios.post(\"http://localhost:3001/api/upload\", toUpload, {\n\n        })\n            .then(res=>{\n                if(res.status === 200) {\n                    this.showNotification(this.notificationDOMRef,\"The poll was successfully created!\", \"Success\", \"success\", 2000);\n                    this.setState({\n                        lgShow: false,\n                        loading: false,\n                        changeOccurred: true\n                    }, () => {\n                        setTimeout(() => {this.setState({changeOccurred: false})}, 2000);\n                    })\n                }\n            })\n\n      }\n\n    };\n\n    handleChange = (date) => {\n        this.setState({\n            endDate: date\n        });\n\n    };\n\n    handleFileChange = (event) => {\n        this.setState({\n            selectedFile: event.target.files[0]\n        })\n    };\n\n\n    render() {\n        let lgClose = () => this.setState({ lgShow: false });\n        return (\n            <div>\n                <ReactNotification ref={this.notificationDOMRef} />\n                <div className=\"container-fluid p-0\">\n                    <div className=\"row\">\n                        <div className=\"col-md-12\">\n                            <ControlledCarousel/>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"container\">\n                    <div className=\"row justify-content-md-center\">\n                        <div className=\"col-md-6 my-3 d-flex align-items-center flex-column\">\n                            <h5>To create your own poll, press the following button.</h5>\n                            <button type=\"button\" className=\"btn btn-secondary hvr-bob\" onClick={this.openModal}>Create Poll</button>\n                        </div>\n                    </div>\n                </div>\n                <div>\n                    <Modal\n                        size=\"lg\"\n                        show={this.state.lgShow}\n                        onHide={lgClose}\n                        aria-labelledby=\"example-modal-sizes-title-lg\"\n                    >\n                        <ReactNotification ref={this.notificationDOM} />\n                        <Modal.Header closeButton>\n                            <Modal.Title id=\"example-modal-sizes-title-lg\">\n                                Create A Poll\n                            </Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body>\n                            <Form.Group>\n                                <Form.Group controlId=\"exampleForm.ControlInput1\">\n                                    <Form.Label>Poll Title</Form.Label>\n                                    <Form.Control type=\"email\" placeholder=\"Enter Title For The Poll\" ref={input => this.pollTitle = input}/>\n                                </Form.Group>\n                                <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                                    <Form.Label>Add Voting Options</Form.Label>\n                                    <InputGroup className=\"mb-3\">\n                                        <FormControl\n                                            placeholder=\"Voting Option\"\n                                            aria-label=\"Voting Option\"\n                                            aria-describedby=\"basic-addon2\"\n                                            ref={input => this.textInput = input}\n                                        />\n                                        <InputGroup.Append>\n                                            <Button onClick = {this.addOptions} variant=\"outline-secondary\">Add</Button>\n                                        </InputGroup.Append>\n                                    </InputGroup>\n\n                                    <ul className=\"listOptions\">\n                                        <FlipMove duration={250} easing=\"ease-out\">\n                                            {\n                                                this.state.options.map(t => {return <li className=\"lis hvr-bounce-out\" onClick={() => this.deleteItem(t.key)} key={t.key}>{t.name}</li>})\n                                            }\n                                        </FlipMove>\n                                    </ul>\n\n                                </Form.Group>\n                                <Row>\n                                    <Col>\n                                <Form.Group controlId=\"datePicker\">\n                                    <Form.Label>How Long Will This Poll Be Active?</Form.Label>\n                                    <InputGroup>\n                                    <DatePicker\n                                        inline\n                                        selected={this.state.endDate}\n                                        onChange={this.handleChange}\n                                        showTimeSelect\n                                        timeFormat=\"HH:mm\"\n                                        timeIntervals={15}\n                                        dateFormat=\"MMMM d, yyyy h:mm aa\"\n                                        timeCaption=\"Time\"\n                                    />\n                                    </InputGroup>\n                                </Form.Group>\n                                    </Col>\n                                    <Col md=\"6\">\n                                    <Form.Group controlId=\"fileUpload\">\n                                        <Form.Label >Upload Your Image</Form.Label>\n                                            <form method=\"post\" action=\"#\" id=\"#\">\n                                                <div className=\"form-group files\">\n                                                    <input type=\"file\" className=\"form-control\" multiple=\"\" onChange={this.handleFileChange}/>\n                                                </div>\n\n                                            </form>\n                                    </Form.Group>\n                                    </Col>\n                                </Row>\n                                <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                                    <Form.Label>Description</Form.Label>\n                                    <Form.Control as=\"textarea\" rows=\"3\" ref={input => this.pollDescription = input}/>\n                                </Form.Group>\n                                <Button onClick={this.onRegister} variant=\"primary\" >\n                                    Submit\n                                </Button>\n                            </Form.Group>\n                        </Modal.Body>\n                    </Modal>\n                    <Spin spinning={this.state.loading}/>\n                </div>\n                <Divider>All Polls</Divider>\n                <ListPolls isLoggedIn={this.state.loggedIn} user={this.state.user} hasChanged={this.state.changeOccurred}/>\n            </div>\n\n                )\n        }\n}\n\n","import React from \"react\";\nimport ReactNotification from \"react-notifications-component\";\nimport \"react-notifications-component/dist/theme.css\";\n\n\n\nexport default class Login extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            email : \"\",\n            password : \"\",\n        };\n        this.notificationDOMRef = React.createRef();\n\n    }\n\n\n    onSubmit = (event) => {\n        event.preventDefault();\n        let loginData = {\n            email: this.state.email,\n            password: this.state.password\n        };\n\n        if(!this.checkValidEmail()){\n            this.notificationDOMRef.current.addNotification({\n                title: \"Error\",\n                message: \"Invalid E-mail format!\",\n                type: \"danger\",\n                insert: \"top\",\n                container: \"top-center\",\n                animationIn: [\"animated\", \"fadeIn\"],\n                animationOut: [\"animated\", \"fadeOut\"],\n                dismiss: { duration: 3000 },\n                dismissable: { click: true }\n            });\n        }\n\n        if(this.checkEmpty()){\n            this.notificationDOMRef.current.addNotification({\n                title: \"Error\",\n                message: \"All fields are required. Please fill them all.\",\n                type: \"danger\",\n                insert: \"top\",\n                container: \"top-center\",\n                animationIn: [\"animated\", \"fadeIn\"],\n                animationOut: [\"animated\", \"fadeOut\"],\n                dismiss: { duration: 3000 },\n                dismissable: { click: true }\n            });\n        }\n\n        if(this.checkValidEmail() && !this.checkEmpty()) {\n            fetch(\"http://localhost:3001/api/authenticate\", {\n                method: 'POST',\n                body: JSON.stringify(loginData),\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            })\n                .then(res => {\n                    if (res.status === 200) {\n                        res.json().then(data => {\n                            sessionStorage.setItem('jwtToken', data.token);\n                            this.notificationDOMRef.current.addNotification({\n                                title: \"Success\",\n                                message: \"Successfully logged in!\",\n                                type: \"success\",\n                                insert: \"top\",\n                                container: \"top-center\",\n                                animationIn: [\"animated\", \"fadeIn\"],\n                                animationOut: [\"animated\", \"fadeOut\"],\n                                dismiss: {duration: 2000},\n                                dismissable: {click: true}\n                            });\n                            setTimeout(()=>{document.location.href=\"/\";},1000);\n                        });\n\n                    }\n                    else if (res.status === 401) {\n                        res.json().then(data => {\n                            this.notificationDOMRef.current.addNotification({\n                                title: \"Error\",\n                                message: data.error,\n                                type: \"danger\",\n                                insert: \"top\",\n                                container: \"top-center\",\n                                animationIn: [\"animated\", \"fadeIn\"],\n                                animationOut: [\"animated\", \"fadeOut\"],\n                                dismiss: {duration: 2000},\n                                dismissable: {click: true}\n                            });\n                        })\n                    }\n                })\n        }\n\n    };\n\n    handleEmailChange = (event) =>{\n        let email = event.target.value;\n        this.setState({\n            email: email\n        });\n\n\n    };\n\n    handlePasswordChange = (event) => {\n        let password = event.target.value;\n        this.setState({\n            password: password\n        });\n    };\n\n    checkValidEmail = () => {\n        var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        return re.test(String(this.state.email).toLowerCase());\n    };\n\n    checkEmpty = () => {\n      return this.state.email.length === 0 || this.state.password.length === 0;\n\n    };\n\n    render(){\n\n        return(\n\n            <div className=\"container login-container\">\n                <ReactNotification ref={this.notificationDOMRef} />\n                <div className=\"row\">\n                    <div className=\"col-md-12 col-sm-6 login-form-1\">\n                        <h3>Login to E-Vote</h3>\n                        <form onSubmit={this.onSubmit}>\n                            <div className=\"form-group\">\n                                <input type=\"text\" className=\"form-control\" placeholder=\"Your Email\" onChange={this.handleEmailChange}/>\n                            </div>\n                            <div className=\"form-group\">\n                                <input type=\"password\" className=\"form-control\" placeholder=\"Your Password\" onChange={this.handlePasswordChange}/>\n                            </div>\n                            <div className=\"form-group\">\n                                <input type=\"submit\" className=\"btnSubmit\" value=\"Login\"/>\n                            </div>\n                        </form>\n                    </div>\n\n                </div>\n            </div>\n            );\n    }\n}\n","import React from \"react\";\nimport ReactNotification from \"react-notifications-component\";\nimport \"react-notifications-component/dist/theme.css\";\n\n\nexport default class Register extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            email: \"\",\n            password: \"\",\n            repeatPassword: \"\",\n            name: \"\"\n        };\n        this.notificationDOMRef = React.createRef();\n    }\n\n    componentDidMount = () => {\n        this.checkEmpty();\n    };\n\n    onSumbit = (event) => {\n        event.preventDefault();\n      let registerData = {\n          name: this.state.name,\n          password: this.state.password,\n          email: this.state.email\n      };\n\n      let validEmail = this.checkEmail();\n      let emptyFields = this.checkEmpty();\n\n\n      if(!validEmail){\n          this.notificationDOMRef.current.addNotification({\n              title: \"Error\",\n              message: \"Invalid E-mail format!\",\n              type: \"danger\",\n              insert: \"top\",\n              container: \"top-center\",\n              animationIn: [\"animated\", \"fadeIn\"],\n              animationOut: [\"animated\", \"fadeOut\"],\n              dismiss: { duration: 3000 },\n              dismissable: { click: true }\n          });\n      }\n      if(emptyFields){\n          this.notificationDOMRef.current.addNotification({\n              title: \"Error\",\n              message: \"All fields are required. Please fill them all.\",\n              type: \"danger\",\n              insert: \"top\",\n              container: \"top-center\",\n              animationIn: [\"animated\", \"fadeIn\"],\n              animationOut: [\"animated\", \"fadeOut\"],\n              dismiss: { duration: 3000 },\n              dismissable: { click: true }\n          });\n      }\n      if(this.state.password.localeCompare(this.state.repeatPassword) !== 0){\n          this.notificationDOMRef.current.addNotification({\n              title: \"Error\",\n              message: \"Password and repeated password must match!\",\n              type: \"danger\",\n              insert: \"top\",\n              container: \"top-center\",\n              animationIn: [\"animated\", \"fadeIn\"],\n              animationOut: [\"animated\", \"fadeOut\"],\n              dismiss: { duration: 3000 },\n              dismissable: { click: true }\n          });\n      }\n      if(validEmail && !emptyFields && this.state.password.localeCompare(this.state.repeatPassword) === 0) {\n\n\n          fetch(\"http://localhost:3001/api/register\", {\n              method: 'POST',\n              body: JSON.stringify(registerData),\n              headers: {\n                  'Content-Type': 'application/json'\n              }\n          })\n              .then(res => {\n                  if (res.status === 200) {\n                      console.log(res.status);\n                      this.notificationDOMRef.current.addNotification({\n                          title: \"Success\",\n                          message: \"Successfully registered!\",\n                          type: \"success\",\n                          insert: \"top\",\n                          container: \"top-center\",\n                          animationIn: [\"animated\", \"fadeIn\"],\n                          animationOut: [\"animated\", \"fadeOut\"],\n                          dismiss: {duration: 2000},\n                          dismissable: {click: true}\n                      });\n                      setTimeout(()=>{document.location.href=\"/login\";},1000);\n                  }\n                  else if (res.status === 500) {\n                      res.json().then(data => {\n                          this.notificationDOMRef.current.addNotification({\n                              title: \"Error\",\n                              message: data.error,\n                              type: \"danger\",\n                              insert: \"top\",\n                              container: \"top-center\",\n                              animationIn: [\"animated\", \"fadeIn\"],\n                              animationOut: [\"animated\", \"fadeOut\"],\n                              dismiss: {duration: 2000},\n                              dismissable: {click: true}\n                          });\n                      })\n                  }\n              })\n      }\n\n    };\n\n    handleEmailChange = (event) => {\n        let email = event.target.value;\n        this.setState({\n            email: email\n        });\n\n    };\n\n    handleNameChange = (event) => {\n        let name = event.target.value;\n        this.setState({\n            name: name\n        });\n    };\n\n    handlePasswordChange = (event) => {\n        let password = event.target.value;\n        this.setState({\n            password: password\n        });\n    };\n\n    handleRepeatPasswordChange = (event) => {\n        let repeatPass = event.target.value;\n        this.setState({\n            repeatPassword: repeatPass\n        });\n\n\n\n    };\n\n    checkEmpty = () => {\n\n        if(this.state.email.length === 0 || this.state.name.length === 0 || this.state.password.length === 0 || this.state.repeatPassword.length === 0){\n            return true;\n        }\n        else{\n            return false;\n        }\n\n    };\n\n    checkEmail = () => {\n        var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        if(String(this.state.email).length !== 0){\n            return re.test(String(this.state.email).toLowerCase());\n        }\n    };\n\n    render(){\n        return(\n            <div className=\"container login-container\">\n                <ReactNotification ref={this.notificationDOMRef}/>\n            <div className=\"row\">\n                <div className=\"col-md-12 col-sm-6 login-form-1\">\n                    <h3>Register to E-Vote</h3>\n                    <form onSubmit={this.onSumbit} >\n                        <div className=\"form-group\">\n                            <input type=\"text\" name=\"name\" className=\"form-control\" placeholder=\"Your Name\" onChange={this.handleNameChange} />\n                        </div>\n                        <div className=\"form-group\">\n                            <input type=\"text\" name=\"email\" className=\"form-control\" placeholder=\"Your Email\" onChange={this.handleEmailChange}/>\n                        </div>\n                        <div className=\"form-group\">\n                            <input type=\"password\" name=\"password\" className=\"form-control\" placeholder=\"Your Password\" onChange={this.handlePasswordChange}/>\n                        </div>\n                        <div className=\"form-group\">\n                            <input type=\"password\" name=\"reppassword\" className=\"form-control\" placeholder=\"Repeat Your Password\" onChange={this.handleRepeatPasswordChange}/>\n                        </div>\n                        <div className=\"form-group\">\n                            <input id=\"registerButton\" type=\"submit\" className=\"btnSubmit\" value=\"Register\" />\n                        </div>\n                    </form>\n                </div>\n\n            </div>\n        </div>);\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Route, } from \"react-router-dom\";\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport NavBar from './Navbar';\nimport App from './App';\nimport Login from './Login';\nimport Register from './Register';\n\n\n\nclass Index extends React.Component{\n\n    constructor(props){\n       super(props);\n       this.state={\n         loggedIn: false\n       };\n    }\n\n    render(){\n        return(\n            <BrowserRouter>\n                <React.Fragment>\n                    <NavBar/>\n                    <Route exact path=\"/\" component={App} />\n                    <Route exact path=\"/login\" component={Login} />\n                    <Route exact path=\"/register\" component={Register} />\n                </React.Fragment>\n            </BrowserRouter>\n        );\n    }\n}\n\nReactDOM.render(<Index/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}